{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "synapse-gdp-contoso-uks-dev-001"
		},
		"CapitaOne_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CapitaOne'"
		},
		"LiquidLogic_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LiquidLogic'"
		},
		"sqldb_gdp_contoso_uks_01_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sqldb_gdp_contoso_uks_01'"
		},
		"synapse-gdp-contoso-uks-dev-001-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'synapse-gdp-contoso-uks-dev-001-WorkspaceDefaultSqlServer'"
		},
		"dls_gdp_contoso_enriched_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adisrefgdpcontosoweutst.dfs.core.windows.net/"
		},
		"dls_gdp_contoso_raw_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adisrawgdpcontosoweutst.dfs.core.windows.net/"
		},
		"kv_gdp_contoso_01_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-gdp-contoso-weu-tst01.vault.azure.net/"
		},
		"st_gdp_contoso_01_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://storawgdpcontosoweutst.blob.core.windows.net/"
		},
		"synapse-gdp-contoso-uks-dev-001-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adisrefgdpcontosoweutst.dfs.core.windows.net"
		},
		"triggerAttendanceSummary_properties_pipeCapitaOneAttendanceSummary2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerAttendanceSummary_properties_pipeCapitaOneAttendanceSummary2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerAttendanceSummary_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerCitySchoolInformation2_properties_pipeSchoolsSchoolInformation2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerCitySchoolInformation2_properties_pipeSchoolsSchoolInformation2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerCitySchoolInformation2_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerCpCarePlan_properties_pipeLiquidLogicCpCarePlan2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerCpCarePlan_properties_pipeLiquidLogicCpCarePlan2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerCpCarePlan_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerEcafContact_properties_pipeLiquidLogicEcafContact2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerEcafContact_properties_pipeLiquidLogicEcafContact2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerEcafContact_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerEducationDetails_properties_pipeCapitaOneEducationDetails2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerEducationDetails_properties_pipeCapitaOneEducationDetails2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerEducationDetails_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerExclusions_properties_pipeCapitaOneExclusions2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerExclusions_properties_pipeCapitaOneExclusions2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerExclusions_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerIcsContact2_properties_pipeLiquidLogicIcsContact22Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerIcsContact2_properties_pipeLiquidLogicIcsContact22Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerIcsContact2_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerIcsCprchist_properties_pipeLiquidLogicIcscCprchist2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerIcsCprchist_properties_pipeLiquidLogicIcscCprchist2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerIcsCprchist_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerIcsLegalOrders_properties_pipeLiquidLogicIcsLegalOrders2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerIcsLegalOrders_properties_pipeLiquidLogicIcsLegalOrders2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerIcsLegalOrders_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerIcsPeriodCare_properties_pipeLiquidLogicIcsPeriodCare2Refined_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerIcsPeriodCare_properties_pipeLiquidLogicIcsPeriodCare2Refined_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerIcsPeriodCare_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerIcsPlacement_properties_pipeLiquidLogicIcsPlacement2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerIcsPlacement_properties_pipeLiquidLogicIcsPlacement2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerIcsPlacement_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerIcsRefer_properties_pipeLiquidLogicIcsRefer2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerIcsRefer_properties_pipeLiquidLogicIcsRefer2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerIcsRefer_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerIcscPreg_properties_pipeLiquidLogicIcscPreg2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerIcscPreg_properties_pipeLiquidLogicIcscPreg2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerIcscPreg_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerInternalReferenceData2_properties_pipeSchoolsInternalReferenceData2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerInternalReferenceData2_properties_pipeSchoolsInternalReferenceData2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerInternalReferenceData2_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerIsPerson_properties_pipeLiquidLogicIsPerson2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerIsPerson_properties_pipeLiquidLogicIsPerson2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerIsPerson_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerLookUpsFull_properties_pipeCapitaOneLookUpsFull2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerLookUpsFull_properties_pipeCapitaOneLookUpsFull2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerLookUpsFull_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerPeople_properties_pipeCapitaOnePeople2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerPeople_properties_pipeCapitaOnePeople2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerPeople_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerPeopleNameChange_properties_pipeCapitaOnePeopleNameChange2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerPeopleNameChange_properties_pipeCapitaOnePeopleNameChange2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerPeopleNameChange_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerPpMark_properties_pipeLiquidLogicPpMark2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerPpMark_properties_pipeLiquidLogicPpMark2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerPpMark_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerSchoolFiles_properties_pipeSchools2Raw_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerSchoolFiles_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/storawgdpcontosoweutst"
		},
		"triggerSchoolStatus_properties_pipeSchoolStatus2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerSchoolStatus_properties_pipeSchoolStatus2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerSchoolStatus_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerStudHist_properties_pipeCapitaOneStudHist2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerStudHist_properties_pipeCapitaOneStudHist2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerStudHist_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerStudentAttendance_properties_pipeCapitaOneStudentAttendance2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerStudentAttendance_properties_pipeCapitaOneStudentAttendance2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerStudentAttendance_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerTerms_properties_pipeTerms2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerTerms_properties_pipeTerms2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerTerms_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerWfAssessment_properties_pipeLiquidLogicWfAssessment_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerWfAssessment_properties_pipeLiquidLogicWfAssessment_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerWfAssessment_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerWfAssessmentArchive_properties_pipeLiquidLogicWfAssessmentArchive_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerWfAssessmentArchive_properties_pipeLiquidLogicWfAssessmentArchive_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerWfAssessmentArchive_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerWfAssessmentType_properties_pipeLiquidLogicWfAssessmentType2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerWfAssessmentType_properties_pipeLiquidLogicWfAssessmentType2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerWfAssessmentType_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerWfaanswer_properties_pipeLiquidLogicWfaanswer2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerWfaanswer_properties_pipeLiquidLogicWfaanswer2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerWfaanswer_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerWfasession_properties_pipeLiquidLogicWfasession2Enriched_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerWfasession_properties_pipeLiquidLogicWfasession2Enriched_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerWfasession_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		},
		"triggerWfpicklistitem_properties_pipeLiquidLogicWfpicklistitem_parameters_folderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"triggerWfpicklistitem_properties_pipeLiquidLogicWfpicklistitem_parameters_fileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"triggerWfpicklistitem_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b3f04a9-6375-4341-a513-dd53731a99a4/resourceGroups/weu-tst-gdp-validation-rg/providers/Microsoft.Storage/storageAccounts/adisrawgdpcontosoweutst"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/pipeCapitaOne2Raw')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Copy new or updated rows only from database using external control table",
				"activities": [
					{
						"name": "LookUpTableInfo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select Object_Name, Source_Name, IsNull(Change_Date,'') as Change_Date, Where_Statement\nfrom metrics.SqlPullQueries WHERE Source_Name = '@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsMetricsTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "SqlPullQueries",
										"type": "Expression"
									},
									"SchemaName": "metrics"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set Object Variables",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LookUpTableInfo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "VarTableInfo",
							"value": {
								"value": "@activity('LookUpTableInfo').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachObject",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Object Variables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('VarTableInfo')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CheckChangeDateCol",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LookUpLastLoadDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(not(empty(item().Change_Date)),not(empty(activity('LookUpLastLoadDate').output.firstRow.LastLoadDate)))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Set no extended Var",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "ExtractQuery",
													"value": {
														"value": "@item().Where_Statement",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Set Delta Value",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "ExtractQuery",
													"value": {
														"value": "@concat(\n  item().Where_Statement, \n  ' and ',\n  item().Change_Date,\n  '> CONVERT(DATETIME, ''',\n  activity('LookUpLastLoadDate').output.firstRow.LastLoadDate,\n  ''', 110 )'\n)",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "CopytoRaw",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CheckChangeDateCol",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT * FROM ', item().Object_Name,' ',variables('ExtractQuery'))",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "dsCapitaNew",
											"type": "DatasetReference",
											"parameters": {
												"SourceName": {
													"value": "@pipeline().parameters.SourceName",
													"type": "Expression"
												},
												"ObjectName": {
													"value": "@item().Object_Name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dsRawParquet",
											"type": "DatasetReference",
											"parameters": {
												"SourceName": {
													"value": "@pipeline().parameters.SourceName",
													"type": "Expression"
												},
												"ObjectName": "@item().Object_Name"
											}
										}
									]
								},
								{
									"name": "UpdateControlTable",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CopytoRaw",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "dbo.update_Retrieve_Date_Time",
										"storedProcedureParameters": {
											"Source_Name": {
												"value": {
													"value": "@pipeline().parameters.SourceName",
													"type": "Expression"
												},
												"type": "String"
											},
											"Object_Name": {
												"value": {
													"value": "@item().Object_Name",
													"type": "Expression"
												},
												"type": "String"
											},
											"Retrieve_Date_Time": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"Rows_Extracted": {
												"value": {
													"value": "@activity('CopytoRaw').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Target_Path_File": {
												"value": {
													"value": "@concat(\npipeline().parameters.SourceName, '/',\nsubstring(\nitem().Object_Name,\nadd(indexof(item().Object_Name, '.'),1),\nsub(length(item().Object_Name), add(indexof(item().Object_Name, '.'), 1))\n), '/',\n'year=',\nformatDateTime(pipeline().TriggerTime,'yyyy'), '/',\n'month=',\nformatDateTime(pipeline().TriggerTime,'MM'), '/',\n'day=',\nformatDateTime(pipeline().TriggerTime,'dd'), '/',\nsubstring(\nitem().Object_Name,\nadd(indexof(item().Object_Name, '.'),1),\nsub(length(item().Object_Name), add(indexof(item().Object_Name, '.'), 1))\n),\n'.parquet'\n)",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "sqldb_gdp_contoso_uks_01",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "LookUpLastLoadDate",
									"description": "Retrieve the last value stored in external control table",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT CONVERT(varchar,MAX(Retrieve_Date_Time),120) as LastloadDate from metrics.rawExecutions where Object_Name = '@{item().Object_Name}';",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "dsMetricsTable",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "RawExecutions",
													"type": "Expression"
												},
												"SchemaName": "metrics"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "capitaone"
					}
				},
				"variables": {
					"VarTableInfo": {
						"type": "Array"
					},
					"ExtractQuery": {
						"type": "String"
					}
				},
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T19:19:30Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsMetricsTable')]",
				"[concat(variables('workspaceId'), '/datasets/dsCapitaNew')]",
				"[concat(variables('workspaceId'), '/datasets/dsRawParquet')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeCapitaOneAttendanceSummary2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowCapitaOneAttendanceSummary",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"AttendanceSummary": {
										"folderPath": {
											"value": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))",
											"type": "Expression"
										},
										"fileName": {
											"value": "@pipeline().parameters.fileName",
											"type": "Expression"
										}
									},
									"Enriched": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "capitaone",
									"type": "String"
								},
								"Object_Name": {
									"value": "emsmain.attendance_summary",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:37Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowCapitaOneAttendanceSummary')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeCapitaOneEducationDetails2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowCapitaOneEducationDetails",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EducationDetails": {
										"folderPath": {
											"value": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))",
											"type": "Expression"
										},
										"fileName": {
											"value": "@pipeline().parameters.fileName",
											"type": "Expression"
										}
									},
									"Enriched": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "capitaone",
									"type": "String"
								},
								"Object_Name": {
									"value": "emsmain.education_details",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:37Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowCapitaOneEducationDetails')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeCapitaOneExclusions2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowCapitaOneExclusions",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Exclusions": {
										"folderPath": {
											"value": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))",
											"type": "Expression"
										},
										"fileName": {
											"value": "@pipeline().parameters.fileName",
											"type": "Expression"
										}
									},
									"Enriched": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "capitaone",
									"type": "String"
								},
								"Object_Name": {
									"value": "emsmain.exclusions",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:39Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowCapitaOneExclusions')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeCapitaOneLookUpsFull2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowCapitaOneLookUpsFull",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"LookUpsFull": {
										"folderPath": {
											"value": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))",
											"type": "Expression"
										},
										"fileName": {
											"value": "@pipeline().parameters.fileName",
											"type": "Expression"
										}
									},
									"Enriched": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "capitaone",
									"type": "String"
								},
								"Object_Name": {
									"value": "emsmain.lookups_full",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:37Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowCapitaOneLookUpsFull')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeCapitaOnePeople2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowCapitaOnePeople",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"People": {
										"folderPath": {
											"value": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))",
											"type": "Expression"
										},
										"fileName": {
											"value": "@pipeline().parameters.fileName",
											"type": "Expression"
										}
									},
									"Enriched": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "capitaone",
									"type": "String"
								},
								"Object_Name": {
									"value": "emsmain.people",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:36Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowCapitaOnePeople')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeCapitaOnePeopleNameChange2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowCapitaOnePeopleNameChange",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PeopleNameChange": {
										"folderPath": {
											"value": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))",
											"type": "Expression"
										},
										"fileName": {
											"value": "@pipeline().parameters.fileName",
											"type": "Expression"
										}
									},
									"Enriched": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "capitaone",
									"type": "String"
								},
								"Object_Name": {
									"value": "emsmain.people_name_change",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:37Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowCapitaOnePeopleNameChange')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeCapitaOneStudHist2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowCapitaOneStudHist",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StudHist": {
										"folderPath": {
											"value": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))",
											"type": "Expression"
										},
										"fileName": {
											"value": "@pipeline().parameters.fileName",
											"type": "Expression"
										}
									},
									"Enriched": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "capitaone",
									"type": "String"
								},
								"Object_Name": {
									"value": "emsmain.stud_hist",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:38Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowCapitaOneStudHist')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeCapitaOneStudentAttendance2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowCapitaOneStudentAttendance",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StudentAttendance": {
										"folderPath": {
											"value": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))",
											"type": "Expression"
										},
										"fileName": {
											"value": "@pipeline().parameters.fileName",
											"type": "Expression"
										}
									},
									"Enriched": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "capitaone",
									"type": "String"
								},
								"Object_Name": {
									"value": "emsmain.student_attendance",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:37Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowCapitaOneStudentAttendance')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeLiquidLogic2Raw')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Copy new or updated rows only from database using external control table",
				"activities": [
					{
						"name": "LookUpTableInfo",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM metrics.SqlPullQueries WHERE Source_Name = '@{pipeline().parameters.SourceName}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dsMetricsTable",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "SqlPullQueries",
										"type": "Expression"
									},
									"SchemaName": "metrics"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set Object Variables",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "LookUpTableInfo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "VarTableInfo",
							"value": {
								"value": "@activity('LookUpTableInfo').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachObject",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Object Variables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('VarTableInfo')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CheckChangeDateCol",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LookUpLastLoadDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(not(empty(item().Change_Date)),not(empty(activity('LookUpLastLoadDate').output.firstRow.LastLoadDate)))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Set no extended Var",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "ExtractQuery",
													"value": {
														"value": "@item().Where_Statement",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Set Delta Value",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "ExtractQuery",
													"value": {
														"value": "@concat(\nitem().Where_Statement, \n  ' and ',\nitem().Change_Date,\n' > ',\n'CONVERT(datetime, ', \n'''',\nactivity('LookUpLastLoadDate').output.firstRow.LastLoadDate,\n'''', \n', 120)'\n)",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "CopytoRaw",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "CheckChangeDateCol",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT * FROM ', item().Object_Name,' ',variables('ExtractQuery'))",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "dsLiquidLogic",
											"type": "DatasetReference",
											"parameters": {
												"SourceName": {
													"value": "@pipeline().parameters.SourceName",
													"type": "Expression"
												},
												"ObjectName": {
													"value": "@item().Object_Name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dsRawParquet",
											"type": "DatasetReference",
											"parameters": {
												"SourceName": {
													"value": "@trim(pipeline().parameters.SourceName)",
													"type": "Expression"
												},
												"ObjectName": {
													"value": "@trim(item().Object_Name)",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "UpdateControlTable",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CopytoRaw",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "dbo.update_Retrieve_Date_Time",
										"storedProcedureParameters": {
											"Source_Name": {
												"value": {
													"value": "@pipeline().parameters.SourceName",
													"type": "Expression"
												},
												"type": "String"
											},
											"Object_Name": {
												"value": {
													"value": "@item().Object_Name",
													"type": "Expression"
												},
												"type": "String"
											},
											"Retrieve_Date_Time": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"Rows_Extracted": {
												"value": {
													"value": "@activity('CopytoRaw').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int64"
											},
											"Target_Path_File": {
												"value": {
													"value": "@concat(\npipeline().parameters.SourceName, '/',\nsubstring(\nitem().Object_Name,\nadd(indexof(item().Object_Name, '.'),1),\nsub(length(item().Object_Name), add(indexof(item().Object_Name, '.'), 1))\n), '/',\n'year=',\nformatDateTime(pipeline().TriggerTime,'yyyy'), '/',\n'month=',\nformatDateTime(pipeline().TriggerTime,'MM'), '/',\n'day=',\nformatDateTime(pipeline().TriggerTime,'dd'), '/',\nsubstring(\nitem().Object_Name,\nadd(indexof(item().Object_Name, '.'),1),\nsub(length(item().Object_Name), add(indexof(item().Object_Name, '.'), 1))\n),\n'.parquet'\n)",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "sqldb_gdp_contoso_uks_01",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "LookUpLastLoadDate",
									"description": "Retrieve the last value stored in external control table",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT CONVERT(varchar,MAX(Retrieve_Date_Time),120) as LastloadDate from metrics.RawExecutions where Object_Name = '@{item().Object_Name}'\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "dsMetricsTable",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "RawExecutions",
													"type": "Expression"
												},
												"SchemaName": "metrics"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceName": {
						"type": "string",
						"defaultValue": "liquidlogic"
					}
				},
				"variables": {
					"VarTableInfo": {
						"type": "Array"
					},
					"ExtractQuery": {
						"type": "String"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T17:52:54Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsMetricsTable')]",
				"[concat(variables('workspaceId'), '/datasets/dsLiquidLogic')]",
				"[concat(variables('workspaceId'), '/datasets/dsRawParquet')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeLiquidLogicCpCarePlan2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowCpCarePlan",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"fileName": "@pipeline().parameters.fileName",
										"folderPath": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "liquidlogic",
									"type": "String"
								},
								"Object_Name": {
									"value": "dbo.cpcareplan",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:39Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowCpCarePlan')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeLiquidLogicEcafContact2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowEcafContact",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EcafContact": {
										"folderPath": {
											"value": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))",
											"type": "Expression"
										},
										"fileName": "@pipeline().parameters.fileName"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "liquidlogic",
									"type": "String"
								},
								"Object_Name": {
									"value": "dbo.ecafcontact",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:39Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowEcafContact')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeLiquidLogicIcsContact22Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowIcsContact2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"folderPath": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))",
										"fileName": "@pipeline().parameters.fileName"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "liquidlogic",
									"type": "String"
								},
								"Object_Name": {
									"value": "dbo.icscontact2",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:39Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowIcsContact2')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeLiquidLogicIcsLegalOrders2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowIcsLegalOrders",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"fileName": "@pipeline().parameters.fileName",
										"folderPath": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "liquidlogic",
									"type": "String"
								},
								"Object_Name": {
									"value": "dbo.icslegalorders",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:39Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowIcsLegalOrders')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeLiquidLogicIcsPeriodCare2Refined')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowIcsPeriodCare",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"fileName": "@pipeline().parameters.fileName",
										"folderPath": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "liquidlogic",
									"type": "String"
								},
								"Object_Name": {
									"value": "dbo.icsperiodcare",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:42Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowIcsPeriodCare')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeLiquidLogicIcsPlacement2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowIcsPlacement",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"IcsPlacement": {
										"folderPath": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))",
										"fileName": "@pipeline().parameters.fileName"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "liquidlogic",
									"type": "String"
								},
								"Object_Name": {
									"value": "dbo.icsplacement",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:41Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowIcsPlacement')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeLiquidLogicIcsRefer2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowIcsRefer",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"IcsRefer": {
										"folderPath": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))",
										"fileName": "@pipeline().parameters.fileName"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "liquidlogic",
									"type": "String"
								},
								"Object_Name": {
									"value": "dbo.icsrefer",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:42Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowIcsRefer')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeLiquidLogicIcscCprchist2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowIcsCprchist",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"IcsCprchist": {
										"folderPath": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))",
										"fileName": "@pipeline().parameters.fileName"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "liquidlogic",
									"type": "String"
								},
								"Object_Name": {
									"value": "dbo.icscprchist",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:42Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowIcsCprchist')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeLiquidLogicIcscPreg2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowIcscPreg",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"fileName": "@pipeline().parameters.fileName",
										"folderPath": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "liquidlogic",
									"type": "String"
								},
								"Object_Name": {
									"value": "dbo.icscpreg",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:43Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowIcscPreg')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeLiquidLogicIsPerson2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowIsPerson",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"fileName": "@pipeline().parameters.fileName",
										"folderPath": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "liquidlogic",
									"type": "String"
								},
								"Object_Name": {
									"value": "dbo.isperson",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:44Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowIsPerson')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeLiquidLogicPpMark2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowPpMark",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"folderPath": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))",
										"fileName": "@pipeline().parameters.fileName"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "liquidlogic",
									"type": "String"
								},
								"Object_Name": {
									"value": "dbo.ppmark",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:54Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowPpMark')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeLiquidLogicWfAssessment')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowWfAssessment",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"fileName": "@pipeline().parameters.fileName",
										"folderPath": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "liquidlogic",
									"type": "String"
								},
								"Object_Name": {
									"value": "dbo.wfassessment",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:56Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowWfAssessment')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeLiquidLogicWfAssessmentArchive')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowWfAssessmentArchive",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"fileName": "@pipeline().parameters.fileName",
										"folderPath": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "liquidlogic",
									"type": "String"
								},
								"Object_Name": {
									"value": "dbo.wfassessment",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:56Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowWfAssessmentArchive')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeLiquidLogicWfAssessmentType2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowWfAssessmentType",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"folderPath": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))",
										"fileName": "@pipeline().parameters.fileName"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "liquidlogic",
									"type": "String"
								},
								"Object_Name": {
									"value": "dbo.wfassessmenttype",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:31:01Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowWfAssessmentType')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeLiquidLogicWfaanswer2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowWfaanswer",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"folderPath": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))",
										"fileName": "@pipeline().parameters.fileName"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "liquidlogic",
									"type": "String"
								},
								"Object_Name": {
									"value": "dbo.wfaanswer",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:59Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowWfaanswer')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeLiquidLogicWfasession2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowWfasession",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"folderPath": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))",
										"fileName": "@pipeline().parameters.fileName"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "liquidlogic",
									"type": "String"
								},
								"Object_Name": {
									"value": "dbo.wfasession",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:59Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowWfasession')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeLiquidLogicWfpicklistitem')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowWfpicklistitem",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {
										"fileName": "@pipeline().parameters.fileName",
										"folderPath": "@substring(pipeline().parameters.folderPath,4,sub(length(pipeline().parameters.folderPath),4))"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": "liquidlogic",
									"type": "String"
								},
								"Object_Name": {
									"value": "dbo.wfpicklistitem",
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:59Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowWfpicklistitem')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeSchoolStatus2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowSchoolStatus",
								"type": "DataFlowReference",
								"parameters": {
									"folderPath": {
										"value": "'@{substring(\n\npipeline().parameters.folderPath,\n4,\nsub(length(pipeline().parameters.folderPath), 4)\n\n)}'",
										"type": "Expression"
									},
									"fileName": {
										"value": "'@{pipeline().parameters.fileName}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SchoolStatusData2": {},
									"RefinedDeltaTable2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": {
										"value": "schools",
										"type": "Expression"
									},
									"type": "String"
								},
								"Object_Name": {
									"value": {
										"value": "SchoolStatus",
										"type": "Expression"
									},
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/Schools"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-19T13:04:04Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowSchoolStatus')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeSchools2Raw')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "CopytoRaw",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "dsBlobSchools",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@pipeline().parameters.fileName",
										"type": "Expression"
									},
									"folderPath": {
										"value": "@pipeline().parameters.folderPath",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dsRawSchools",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "@pipeline().parameters.fileName"
								}
							}
						]
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopytoRaw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Object_Name": {
									"value": {
										"value": "@pipeline().parameters.fileName",
										"type": "Expression"
									},
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Rows_Extracted": {
									"value": null,
									"type": "Int32"
								},
								"Source_Name": {
									"value": "schools",
									"type": "String"
								},
								"Target_Path_File": {
									"value": {
										"value": "@concat(\n'schools', '/',\npipeline().parameters.fileName,\n'/',\n'year=',\nformatDateTime(pipeline().TriggerTime,'yyyy'), '/',\n'month=',\nformatDateTime(pipeline().TriggerTime,'MM'), '/',\n'day=',\nformatDateTime(pipeline().TriggerTime,'dd'), '/',\npipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string",
						"defaultValue": "/"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/Schools"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-11T11:30:59Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsBlobSchools')]",
				"[concat(variables('workspaceId'), '/datasets/dsRawSchools')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeSchoolsInternalReferenceData2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowSchoolsInternalReferenceData",
								"type": "DataFlowReference",
								"parameters": {
									"folderPath": {
										"value": "'@{substring(\n\npipeline().parameters.folderPath,\n4,\nsub(length(pipeline().parameters.folderPath), 4)\n\n)}'",
										"type": "Expression"
									},
									"fileName": {
										"value": "'@{pipeline().parameters.fileName}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"InternalReferenceData2": {},
									"RefinedTestDeltaTable2": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": {
										"value": "schools",
										"type": "Expression"
									},
									"type": "String"
								},
								"Object_Name": {
									"value": {
										"value": "internal_reference_data",
										"type": "Expression"
									},
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/Schools"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-19T13:04:09Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowSchoolsInternalReferenceData')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeSchoolsSchoolInformation2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowSchoolsCityMasterSchoolInformation",
								"type": "DataFlowReference",
								"parameters": {
									"folderPath": {
										"value": "'@{substring(\n\npipeline().parameters.folderPath,\n4,\nsub(length(pipeline().parameters.folderPath), 4)\n\n)}'",
										"type": "Expression"
									},
									"fileName": {
										"value": "'@{pipeline().parameters.fileName}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"CityMasterSchoolInformation": {},
									"RefinedTestDeltaTable": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": {
										"value": "schools",
										"type": "Expression"
									},
									"type": "String"
								},
								"Object_Name": {
									"value": {
										"value": "city_master_school_information",
										"type": "Expression"
									},
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/Schools"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-19T13:04:09Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowSchoolsCityMasterSchoolInformation')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pipeTerms2Enriched')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dfDeltaTable",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "flowTerms",
								"type": "DataFlowReference",
								"parameters": {
									"folderPath": {
										"value": "'@{substring(\n\npipeline().parameters.folderPath,\n4,\nsub(length(pipeline().parameters.folderPath), 4)\n\n)}'",
										"type": "Expression"
									},
									"fileName": {
										"value": "'@{pipeline().parameters.fileName}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"TermsData2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "air-gdp-contoso-dev-01",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "UpdateControlTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "dfDeltaTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.update_enriched_Retrieve_Date_Time",
							"storedProcedureParameters": {
								"Source_Name": {
									"value": {
										"value": "schools",
										"type": "Expression"
									},
									"type": "String"
								},
								"Object_Name": {
									"value": {
										"value": "Terms",
										"type": "Expression"
									},
									"type": "String"
								},
								"Retrieve_Date_Time": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"Source_Path_File": {
									"value": {
										"value": "@concat(pipeline().parameters.folderPath, '/', pipeline().parameters.fileName)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "sqldb_gdp_contoso_uks_01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/Schools"
				},
				"annotations": [],
				"lastPublishTime": "2022-05-19T13:04:11Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/flowTerms')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]",
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsAttendanceSummary')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "BASE_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "CODE",
						"type": "UTF8"
					},
					{
						"name": "MEANING",
						"type": "UTF8"
					},
					{
						"name": "STAT_MEANING",
						"type": "UTF8"
					},
					{
						"name": "SCHOOL_MEANING",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsBlobSchools')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "st_gdp_contoso_01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"folderPath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/Schools"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"container": "schools"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/st_gdp_contoso_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsCapitaNew')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CapitaOne",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceName": {
						"type": "string"
					},
					"ObjectName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@dataset().ObjectName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CapitaOne')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsCpCarePlan')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"folderPath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "PlanNo",
						"type": "INT32"
					},
					{
						"name": "ParPlanNo",
						"type": "INT32"
					},
					{
						"name": "PlanLink",
						"type": "UTF8"
					},
					{
						"name": "PlanLinkKey",
						"type": "UTF8"
					},
					{
						"name": "ServiceArea",
						"type": "UTF8"
					},
					{
						"name": "PlanType",
						"type": "UTF8"
					},
					{
						"name": "MarkerID",
						"type": "INT32"
					},
					{
						"name": "ReferralID",
						"type": "INT32"
					},
					{
						"name": "MarkerKey",
						"type": "UTF8"
					},
					{
						"name": "Status",
						"type": "UTF8"
					},
					{
						"name": "GlobalPlanID",
						"type": "INT32"
					},
					{
						"name": "GlobalRevision",
						"type": "INT32"
					},
					{
						"name": "Revision",
						"type": "INT32"
					},
					{
						"name": "SubRev",
						"type": "INT32"
					},
					{
						"name": "StartDate",
						"type": "INT96"
					},
					{
						"name": "EndDate",
						"type": "INT96"
					},
					{
						"name": "CPComments",
						"type": "UTF8"
					},
					{
						"name": "CreatedBy",
						"type": "UTF8"
					},
					{
						"name": "CreationDate",
						"type": "INT96"
					},
					{
						"name": "EmergencyPlan",
						"type": "UTF8"
					},
					{
						"name": "EContact1",
						"type": "UTF8"
					},
					{
						"name": "EContact1No",
						"type": "UTF8"
					},
					{
						"name": "EContact2",
						"type": "UTF8"
					},
					{
						"name": "EContact2No",
						"type": "UTF8"
					},
					{
						"name": "ConsentGiven",
						"type": "UTF8"
					},
					{
						"name": "PlanAgreed",
						"type": "UTF8"
					},
					{
						"name": "SUserComments",
						"type": "UTF8"
					},
					{
						"name": "PlanCoord",
						"type": "UTF8"
					},
					{
						"name": "Consent",
						"type": "UTF8"
					},
					{
						"name": "OfferedBy",
						"type": "UTF8"
					},
					{
						"name": "OfferedDate",
						"type": "INT96"
					},
					{
						"name": "OfferedNotes",
						"type": "UTF8"
					},
					{
						"name": "RevisionDate",
						"type": "INT96"
					},
					{
						"name": "UpdateDate",
						"type": "INT96"
					},
					{
						"name": "CompletedBy",
						"type": "UTF8"
					},
					{
						"name": "CompletionDate",
						"type": "INT96"
					},
					{
						"name": "CompletionNotes",
						"type": "UTF8"
					},
					{
						"name": "FrozenDate",
						"type": "INT96"
					},
					{
						"name": "FreezeNotes",
						"type": "UTF8"
					},
					{
						"name": "FrozenBy",
						"type": "UTF8"
					},
					{
						"name": "LACStart",
						"type": "INT96"
					},
					{
						"name": "LACEnd",
						"type": "INT96"
					},
					{
						"name": "PartOneID",
						"type": "INT32"
					},
					{
						"name": "PartTwoID",
						"type": "INT32"
					},
					{
						"name": "ReviewID",
						"type": "INT32"
					},
					{
						"name": "PartTwoPlanNo",
						"type": "INT32"
					},
					{
						"name": "AuditID",
						"type": "UTF8"
					},
					{
						"name": "AuditDate",
						"type": "INT96"
					},
					{
						"name": "AuthBy",
						"type": "UTF8"
					},
					{
						"name": "AuthCode",
						"type": "UTF8"
					},
					{
						"name": "ReasonCeased",
						"type": "UTF8"
					},
					{
						"name": "AuthDate",
						"type": "INT96"
					},
					{
						"name": "AuthComm",
						"type": "UTF8"
					},
					{
						"name": "OrderByOnDisplay",
						"type": "UTF8"
					},
					{
						"name": "ProvTaskNo",
						"type": "INT32"
					},
					{
						"name": "EDMIntegID",
						"type": "UTF8"
					},
					{
						"name": "ReviewSummary",
						"type": "UTF8"
					},
					{
						"name": "ReviewNotes",
						"type": "UTF8"
					},
					{
						"name": "AppVersion",
						"type": "INT32"
					},
					{
						"name": "CreatedStaffHistoryID",
						"type": "INT32"
					},
					{
						"name": "PlanCoordStaffHistoryID",
						"type": "INT32"
					},
					{
						"name": "AuthStaffHistoryID",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsEcafContact')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "ECAFContactID",
						"type": "INT32"
					},
					{
						"name": "PersonID",
						"type": "INT32"
					},
					{
						"name": "EpisodeID",
						"type": "INT32"
					},
					{
						"name": "ContactGroupID",
						"type": "INT32"
					},
					{
						"name": "FormNo",
						"type": "INT32"
					},
					{
						"name": "StartDate",
						"type": "INT96"
					},
					{
						"name": "SuggDate",
						"type": "INT96"
					},
					{
						"name": "CreationDate",
						"type": "INT96"
					},
					{
						"name": "MarkerID",
						"type": "INT32"
					},
					{
						"name": "RecordedBy",
						"type": "UTF8"
					},
					{
						"name": "RecordedByDept",
						"type": "UTF8"
					},
					{
						"name": "LinkedBy",
						"type": "UTF8"
					},
					{
						"name": "LinkedDate",
						"type": "INT96"
					},
					{
						"name": "ParentsAware",
						"type": "UTF8"
					},
					{
						"name": "ChildAware",
						"type": "UTF8"
					},
					{
						"name": "ProfContact",
						"type": "UTF8"
					},
					{
						"name": "PersonMakingContact",
						"type": "UTF8"
					},
					{
						"name": "RelToChild",
						"type": "UTF8"
					},
					{
						"name": "Anonymous",
						"type": "UTF8"
					},
					{
						"name": "KeyAgencyID",
						"type": "INT32"
					},
					{
						"name": "SysAgency",
						"type": "UTF8"
					},
					{
						"name": "SysProfessional",
						"type": "UTF8"
					},
					{
						"name": "ProfNameOutSystem",
						"type": "UTF8"
					},
					{
						"name": "ProfPositionOutSystem",
						"type": "UTF8"
					},
					{
						"name": "ProfAgencyOutSystem",
						"type": "UTF8"
					},
					{
						"name": "ProfAddrOutSystem",
						"type": "UTF8"
					},
					{
						"name": "ProfTelOutSystem",
						"type": "UTF8"
					},
					{
						"name": "FollowUp",
						"type": "UTF8"
					},
					{
						"name": "ContactType",
						"type": "UTF8"
					},
					{
						"name": "ContactMethod",
						"type": "UTF8"
					},
					{
						"name": "SourceType",
						"type": "UTF8"
					},
					{
						"name": "ContactReason",
						"type": "UTF8"
					},
					{
						"name": "ContactReasonDesc",
						"type": "UTF8"
					},
					{
						"name": "ContactDetails",
						"type": "UTF8"
					},
					{
						"name": "ContactTopic",
						"type": "UTF8"
					},
					{
						"name": "ContactIssue",
						"type": "UTF8"
					},
					{
						"name": "AuditID",
						"type": "UTF8"
					},
					{
						"name": "AuditDate",
						"type": "INT96"
					},
					{
						"name": "OutOfHours",
						"type": "UTF8"
					},
					{
						"name": "EpisodeNeeds",
						"type": "UTF8"
					},
					{
						"name": "PrimNeed",
						"type": "UTF8"
					},
					{
						"name": "ExternalFormNo",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsEducationDetails')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "TRAN_EDATE",
						"type": "INT96"
					},
					{
						"name": "LAST_UPDT",
						"type": "INT96"
					},
					{
						"name": "UPDATED_BY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "INACTDATE",
						"type": "INT96"
					},
					{
						"name": "ACTIVE",
						"type": "UTF8"
					},
					{
						"name": "INACTRSN",
						"type": "UTF8"
					},
					{
						"name": "ADDRESSEE",
						"type": "UTF8"
					},
					{
						"name": "AT_MEMO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "EC_BASEID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "ES_ORD",
						"type": "UTF8"
					},
					{
						"name": "FORM7_CAT",
						"type": "UTF8"
					},
					{
						"name": "FSMEAL",
						"type": "UTF8"
					},
					{
						"name": "FSM_END",
						"type": "INT96"
					},
					{
						"name": "GB_RECS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "INCARE",
						"type": "UTF8"
					},
					{
						"name": "ISREFCODE",
						"type": "UTF8"
					},
					{
						"name": "LEA_ROUTE",
						"type": "UTF8"
					},
					{
						"name": "LEA_TRAN",
						"type": "UTF8"
					},
					{
						"name": "MON_SOC",
						"type": "UTF8"
					},
					{
						"name": "PRIM_NEED",
						"type": "UTF8"
					},
					{
						"name": "SEN",
						"type": "UTF8"
					},
					{
						"name": "SENSTAGE",
						"type": "UTF8"
					},
					{
						"name": "SERV_FAM",
						"type": "UTF8"
					},
					{
						"name": "STAT_ISSD",
						"type": "INT96"
					},
					{
						"name": "STAT_REPT",
						"type": "INT96"
					},
					{
						"name": "STAT_STOP",
						"type": "INT96"
					},
					{
						"name": "STUD_AMEND",
						"type": "INT96"
					},
					{
						"name": "STUD_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "STUD_TIME",
						"type": "UTF8"
					},
					{
						"name": "STUD_UPDT",
						"type": "UTF8"
					},
					{
						"name": "STUD_USER",
						"type": "UTF8"
					},
					{
						"name": "TRAN_MEMO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "TRAN_RECS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "TRAV_FAM",
						"type": "UTF8"
					},
					{
						"name": "LOCAL_UPI",
						"type": "UTF8"
					},
					{
						"name": "ASSESS_REC",
						"type": "UTF8"
					},
					{
						"name": "ACTIVE_SEN",
						"type": "UTF8"
					},
					{
						"name": "ACTIVE_TRN",
						"type": "UTF8"
					},
					{
						"name": "CPD_BASE_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "STUD_ID_DESC",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "MOTHERTONGUE",
						"type": "UTF8"
					},
					{
						"name": "MEDICAL",
						"type": "UTF8"
					},
					{
						"name": "CONNEXIONS",
						"type": "UTF8"
					},
					{
						"name": "NATIONALITY",
						"type": "UTF8"
					},
					{
						"name": "PART_TIME",
						"type": "UTF8"
					},
					{
						"name": "U_DATA_SHARING_CONSENT",
						"type": "UTF8"
					},
					{
						"name": "EY_MEMO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "U_CODE_RED",
						"type": "UTF8"
					},
					{
						"name": "U_CODERED",
						"type": "UTF8"
					},
					{
						"name": "U_CODES_RED",
						"type": "UTF8"
					},
					{
						"name": "DEFERRED",
						"type": "UTF8"
					},
					{
						"name": "U_U_KS5PLUS_GROUP",
						"type": "UTF8"
					},
					{
						"name": "U_CIPC",
						"type": "UTF8"
					},
					{
						"name": "U_CIE",
						"type": "UTF8"
					},
					{
						"name": "AT_MEMO_EUPDATE",
						"type": "INT96"
					},
					{
						"name": "GANDTINDICATOR",
						"type": "UTF8"
					},
					{
						"name": "TRANSPORT_PROTECTED",
						"type": "UTF8"
					},
					{
						"name": "TRANSPORT_PROTECTION_END",
						"type": "INT96"
					},
					{
						"name": "CARER",
						"type": "UTF8"
					},
					{
						"name": "PEP",
						"type": "UTF8"
					},
					{
						"name": "TRAV_STATUS",
						"type": "UTF8"
					},
					{
						"name": "TRAV_STATUS_DATA_SOURCE",
						"type": "UTF8"
					},
					{
						"name": "TRAV_SITE_TYPE",
						"type": "UTF8"
					},
					{
						"name": "TRAV_MOBILITY",
						"type": "UTF8"
					},
					{
						"name": "DATE_FIRST_LOOKED_AFTER",
						"type": "INT96"
					},
					{
						"name": "EOTAS",
						"type": "UTF8"
					},
					{
						"name": "INCORRECT_DETAILS_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "CHANGEBYB2BS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "EY_2YEAR_FUNDING",
						"type": "UTF8"
					},
					{
						"name": "EY_EFFECTIVE_DATE",
						"type": "INT96"
					},
					{
						"name": "ADOPTEDFROMCARE",
						"type": "UTF8"
					},
					{
						"name": "PROTECTEDFSM",
						"type": "UTF8"
					},
					{
						"name": "PROTECTEDFSMUNTIL",
						"type": "INT96"
					},
					{
						"name": "APP_CURRENT_BASE_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "APP_CURRENT_BASE_NAME",
						"type": "UTF8"
					},
					{
						"name": "EOTAS_NIP",
						"type": "UTF8"
					},
					{
						"name": "U_PARENTRESPONSIBLE",
						"type": "UTF8"
					},
					{
						"name": "U_DBTEST1",
						"type": "UTF8"
					},
					{
						"name": "U_LASTPASS",
						"type": "INT96"
					},
					{
						"name": "U_PEREXCL",
						"type": "UTF8"
					},
					{
						"name": "U_PNEED",
						"type": "UTF8"
					},
					{
						"name": "U_SENAREACODE",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsExclusions')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "LEA_DECISION",
						"type": "UTF8"
					},
					{
						"name": "EXCL_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "A_YEAR",
						"type": "UTF8"
					},
					{
						"name": "TERM",
						"type": "UTF8"
					},
					{
						"name": "BASE_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "CATEGORY",
						"type": "UTF8"
					},
					{
						"name": "REASON",
						"type": "UTF8"
					},
					{
						"name": "START_DATE",
						"type": "INT96"
					},
					{
						"name": "EXCL_DAYS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "STUD_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "END_DATE",
						"type": "INT96"
					},
					{
						"name": "EXCL_MEMO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "RESULT",
						"type": "UTF8"
					},
					{
						"name": "NO_SUP_OFF",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "GOV_CON_DT",
						"type": "INT96"
					},
					{
						"name": "OFF_ATTEND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "UPHELD",
						"type": "UTF8"
					},
					{
						"name": "APPEAL_DT",
						"type": "INT96"
					},
					{
						"name": "MEETING_DT",
						"type": "INT96"
					},
					{
						"name": "UPDATED_BY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LAST_UPDT",
						"type": "INT96"
					},
					{
						"name": "SCH_APPEAL_RECVD",
						"type": "UTF8"
					},
					{
						"name": "AM_PM",
						"type": "UTF8"
					},
					{
						"name": "REFERRED_DC",
						"type": "UTF8"
					},
					{
						"name": "DC_MEETING_DT",
						"type": "INT96"
					},
					{
						"name": "DC_DECISION",
						"type": "UTF8"
					},
					{
						"name": "REINSTATE_DATE",
						"type": "INT96"
					},
					{
						"name": "REINSTATE_REASON",
						"type": "UTF8"
					},
					{
						"name": "DATE_OFF_ROLL",
						"type": "INT96"
					},
					{
						"name": "PASTORAL_RECD",
						"type": "UTF8"
					},
					{
						"name": "END_MONITOR_DATE",
						"type": "INT96"
					},
					{
						"name": "MOTIVATION",
						"type": "UTF8"
					},
					{
						"name": "STAGE_WHEN_EXCLUDED",
						"type": "UTF8"
					},
					{
						"name": "STATUS_WHEN_EXCLUDED",
						"type": "UTF8"
					},
					{
						"name": "SITE_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "END_AM_PM",
						"type": "UTF8"
					},
					{
						"name": "CREATED_DATE",
						"type": "INT96"
					},
					{
						"name": "CREATED_BY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "NCY_WHEN_EXCLUDED",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SEN_STAGE_WHEN_EXCLUDED",
						"type": "UTF8"
					},
					{
						"name": "SIXTH_DAY",
						"type": "INT96"
					},
					{
						"name": "INCARE_WHEN_EXCLUDED",
						"type": "UTF8"
					},
					{
						"name": "ADDRESS_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "FSM",
						"type": "UTF8"
					},
					{
						"name": "REFERRED_APPEALS",
						"type": "UTF8"
					},
					{
						"name": "ACL",
						"type": "UTF8"
					},
					{
						"name": "EXCL_LUNCH_LENGTH",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "CHANGEBYB2BS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SENEXPERT_REVIEW",
						"type": "UTF8"
					},
					{
						"name": "EXC_DAYS_OS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "VERIFIEDDATE",
						"type": "INT96"
					},
					{
						"name": "VERIFIEDBY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsIcsContact2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "ICSContactID",
						"type": "INT32"
					},
					{
						"name": "PersonID",
						"type": "INT32"
					},
					{
						"name": "ReferralID",
						"type": "INT32"
					},
					{
						"name": "StartDate",
						"type": "INT96"
					},
					{
						"name": "ContactDetails",
						"type": "UTF8"
					},
					{
						"name": "FormNo",
						"type": "INT32"
					},
					{
						"name": "RecordedBy",
						"type": "UTF8"
					},
					{
						"name": "AuditID",
						"type": "UTF8"
					},
					{
						"name": "AuditDate",
						"type": "INT96"
					},
					{
						"name": "LinkedDate",
						"type": "INT96"
					},
					{
						"name": "LinkedBy",
						"type": "UTF8"
					},
					{
						"name": "MarkerID",
						"type": "INT32"
					},
					{
						"name": "ParentsAware",
						"type": "UTF8"
					},
					{
						"name": "ChildAware",
						"type": "UTF8"
					},
					{
						"name": "SSConsent",
						"type": "UTF8"
					},
					{
						"name": "CheckConsent",
						"type": "UTF8"
					},
					{
						"name": "ProfContact",
						"type": "UTF8"
					},
					{
						"name": "PersonMakingContact",
						"type": "UTF8"
					},
					{
						"name": "RelToChild",
						"type": "UTF8"
					},
					{
						"name": "Anonymous",
						"type": "UTF8"
					},
					{
						"name": "SysAgency",
						"type": "UTF8"
					},
					{
						"name": "ProfNameOutSystem",
						"type": "UTF8"
					},
					{
						"name": "ProfPositionOutSystem",
						"type": "UTF8"
					},
					{
						"name": "ProfAgencyOutSystem",
						"type": "UTF8"
					},
					{
						"name": "ProfAddrOutSystem",
						"type": "UTF8"
					},
					{
						"name": "ProfTelOutSystem",
						"type": "UTF8"
					},
					{
						"name": "FollowUp",
						"type": "UTF8"
					},
					{
						"name": "ContactType",
						"type": "UTF8"
					},
					{
						"name": "ContactMethod",
						"type": "UTF8"
					},
					{
						"name": "ContactReason",
						"type": "UTF8"
					},
					{
						"name": "ContactReasonDesc",
						"type": "UTF8"
					},
					{
						"name": "IntegID",
						"type": "UTF8"
					},
					{
						"name": "SyncDate",
						"type": "INT96"
					},
					{
						"name": "SourceType",
						"type": "UTF8"
					},
					{
						"name": "ContactTopic",
						"type": "UTF8"
					},
					{
						"name": "ContactIssue",
						"type": "UTF8"
					},
					{
						"name": "KeyAgencyID",
						"type": "INT32"
					},
					{
						"name": "SyncEvent",
						"type": "UTF8"
					},
					{
						"name": "SuggDate",
						"type": "INT96"
					},
					{
						"name": "CreationDate",
						"type": "INT96"
					},
					{
						"name": "ContactGroupID",
						"type": "INT32"
					},
					{
						"name": "RecordedByDept",
						"type": "UTF8"
					},
					{
						"name": "SysProfessional",
						"type": "UTF8"
					},
					{
						"name": "OutOfHours",
						"type": "UTF8"
					},
					{
						"name": "ExternalFormNo",
						"type": "INT32"
					},
					{
						"name": "RecordedStaffHistoryID",
						"type": "INT32"
					},
					{
						"name": "LinkedStaffHistoryID",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsIcsCprchist')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "CPRegCatID",
						"type": "INT32"
					},
					{
						"name": "CPRegID",
						"type": "INT32"
					},
					{
						"name": "PersonID",
						"type": "INT32"
					},
					{
						"name": "MeetingID",
						"type": "INT32"
					},
					{
						"name": "StartDate",
						"type": "INT96"
					},
					{
						"name": "RegNeglect",
						"type": "UTF8"
					},
					{
						"name": "RegPhysical",
						"type": "UTF8"
					},
					{
						"name": "RegSexual",
						"type": "UTF8"
					},
					{
						"name": "RegEmotional",
						"type": "UTF8"
					},
					{
						"name": "RegComments",
						"type": "UTF8"
					},
					{
						"name": "AuditID",
						"type": "UTF8"
					},
					{
						"name": "AuditDate",
						"type": "INT96"
					},
					{
						"name": "IntegID",
						"type": "UTF8"
					},
					{
						"name": "EndDate",
						"type": "INT96"
					},
					{
						"name": "SyncDate",
						"type": "INT96"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsIcsLegalOrders')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"folderPath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "OrderID",
						"type": "INT32"
					},
					{
						"name": "StartDate",
						"type": "INT96"
					},
					{
						"name": "Court",
						"type": "UTF8"
					},
					{
						"name": "PersonID",
						"type": "INT32"
					},
					{
						"name": "AuditID",
						"type": "UTF8"
					},
					{
						"name": "AuditDate",
						"type": "INT96"
					},
					{
						"name": "LegalStatus",
						"type": "UTF8"
					},
					{
						"name": "ExpDate",
						"type": "INT96"
					},
					{
						"name": "Comments",
						"type": "UTF8"
					},
					{
						"name": "EndDate",
						"type": "INT96"
					},
					{
						"name": "PeriodID",
						"type": "INT32"
					},
					{
						"name": "IntegID",
						"type": "UTF8"
					},
					{
						"name": "SyncDate",
						"type": "INT96"
					},
					{
						"name": "SyncFlag",
						"type": "UTF8"
					},
					{
						"name": "LiveDate",
						"type": "INT96"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsIcsPeriodCare')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"folderPath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "PeriodID",
						"type": "INT32"
					},
					{
						"name": "PersonID",
						"type": "INT32"
					},
					{
						"name": "StartDate",
						"type": "INT96"
					},
					{
						"name": "EndDate",
						"type": "INT96"
					},
					{
						"name": "AuditID",
						"type": "UTF8"
					},
					{
						"name": "AuditDate",
						"type": "INT96"
					},
					{
						"name": "EndReason",
						"type": "UTF8"
					},
					{
						"name": "CinCode",
						"type": "UTF8"
					},
					{
						"name": "ReasonCode",
						"type": "UTF8"
					},
					{
						"name": "SyncFlag",
						"type": "UTF8"
					},
					{
						"name": "ACDetails",
						"type": "UTF8"
					},
					{
						"name": "ACDuration",
						"type": "UTF8"
					},
					{
						"name": "Notes",
						"type": "UTF8"
					},
					{
						"name": "ACAccommodation",
						"type": "UTF8"
					},
					{
						"name": "ACAccommOther",
						"type": "UTF8"
					},
					{
						"name": "IntegID",
						"type": "UTF8"
					},
					{
						"name": "SyncDate",
						"type": "INT96"
					},
					{
						"name": "LiveDate",
						"type": "INT96"
					},
					{
						"name": "AdoptNumber",
						"type": "UTF8"
					},
					{
						"name": "AdoptGender",
						"type": "UTF8"
					},
					{
						"name": "AdoptLegalStatus",
						"type": "UTF8"
					},
					{
						"name": "AdoptFromFoster",
						"type": "UTF8"
					},
					{
						"name": "DateCancelled",
						"type": "INT96"
					},
					{
						"name": "AdoptBestInterests",
						"type": "INT96"
					},
					{
						"name": "AdoptAgree",
						"type": "INT96"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsIcsPlacement')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "PlacementID",
						"type": "INT32"
					},
					{
						"name": "PersonID",
						"type": "INT32"
					},
					{
						"name": "PlacementCode",
						"type": "UTF8"
					},
					{
						"name": "PostCode",
						"type": "UTF8"
					},
					{
						"name": "Reason",
						"type": "UTF8"
					},
					{
						"name": "AuditID",
						"type": "UTF8"
					},
					{
						"name": "AuditDate",
						"type": "INT96"
					},
					{
						"name": "AddrID",
						"type": "UTF8"
					},
					{
						"name": "Addr",
						"type": "UTF8"
					},
					{
						"name": "Telephone",
						"type": "UTF8"
					},
					{
						"name": "PlacementLength",
						"type": "INT32"
					},
					{
						"name": "MainCarerID",
						"type": "INT32"
					},
					{
						"name": "HideInfo",
						"type": "UTF8"
					},
					{
						"name": "HideName",
						"type": "UTF8"
					},
					{
						"name": "HideAddress",
						"type": "UTF8"
					},
					{
						"name": "HideRelChild",
						"type": "UTF8"
					},
					{
						"name": "OutHoursName",
						"type": "UTF8"
					},
					{
						"name": "OutHoursPhone",
						"type": "UTF8"
					},
					{
						"name": "EndDate",
						"type": "INT96"
					},
					{
						"name": "StartDate",
						"type": "INT96"
					},
					{
						"name": "PlacementType",
						"type": "UTF8"
					},
					{
						"name": "OtherType",
						"type": "UTF8"
					},
					{
						"name": "Version",
						"type": "INT32"
					},
					{
						"name": "FromBla",
						"type": "UTF8"
					},
					{
						"name": "EndPrevious",
						"type": "UTF8"
					},
					{
						"name": "AddrHistoID",
						"type": "INT32"
					},
					{
						"name": "PeriodID",
						"type": "INT32"
					},
					{
						"name": "PDistance",
						"type": "UTF8"
					},
					{
						"name": "RelationID",
						"type": "INT32"
					},
					{
						"name": "RelationID2",
						"type": "INT32"
					},
					{
						"name": "RelationID3",
						"type": "INT32"
					},
					{
						"name": "IntegID",
						"type": "UTF8"
					},
					{
						"name": "SyncDate",
						"type": "INT96"
					},
					{
						"name": "SyncFlag",
						"type": "UTF8"
					},
					{
						"name": "FosterID",
						"type": "INT32"
					},
					{
						"name": "LiveDate",
						"type": "INT96"
					},
					{
						"name": "DeptID",
						"type": "UTF8"
					},
					{
						"name": "PlacementProvider",
						"type": "UTF8"
					},
					{
						"name": "PlacementLocation",
						"type": "UTF8"
					},
					{
						"name": "PlacementChangeReason",
						"type": "UTF8"
					},
					{
						"name": "EmergencyCarerName",
						"type": "UTF8"
					},
					{
						"name": "EmergencyAddress",
						"type": "UTF8"
					},
					{
						"name": "EndReason",
						"type": "UTF8"
					},
					{
						"name": "AdoptionMarkerID",
						"type": "INT32"
					},
					{
						"name": "Pre_LPG_AddressKey",
						"type": "UTF8"
					},
					{
						"name": "OfstedPlacementType",
						"type": "UTF8"
					},
					{
						"name": "DecisionAchieved",
						"type": "UTF8"
					},
					{
						"name": "DecisionAchievedComments",
						"type": "UTF8"
					},
					{
						"name": "FFAIsPlanDate",
						"type": "INT96"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsIcsRefer')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "ICSReferralID",
						"type": "INT32"
					},
					{
						"name": "PersonID",
						"type": "INT32"
					},
					{
						"name": "StartDate",
						"type": "INT96"
					},
					{
						"name": "EndDate",
						"type": "INT96"
					},
					{
						"name": "InitialContactID",
						"type": "INT32"
					},
					{
						"name": "Reason",
						"type": "UTF8"
					},
					{
						"name": "OrigFailed",
						"type": "UTF8"
					},
					{
						"name": "ReferralGroupID",
						"type": "INT32"
					},
					{
						"name": "FormNo",
						"type": "INT32"
					},
					{
						"name": "ParentsAware",
						"type": "UTF8"
					},
					{
						"name": "ChildAware",
						"type": "UTF8"
					},
					{
						"name": "Anonymous",
						"type": "UTF8"
					},
					{
						"name": "RecordedBy",
						"type": "UTF8"
					},
					{
						"name": "AuditID",
						"type": "UTF8"
					},
					{
						"name": "AuditDate",
						"type": "INT96"
					},
					{
						"name": "IntegID",
						"type": "UTF8"
					},
					{
						"name": "SyncDate",
						"type": "INT96"
					},
					{
						"name": "ContactType",
						"type": "UTF8"
					},
					{
						"name": "ProfContact",
						"type": "UTF8"
					},
					{
						"name": "PersonMakingContact",
						"type": "UTF8"
					},
					{
						"name": "RelToChild",
						"type": "UTF8"
					},
					{
						"name": "SysAgency",
						"type": "UTF8"
					},
					{
						"name": "ProfNameOutSystem",
						"type": "UTF8"
					},
					{
						"name": "ProfPositionOutSystem",
						"type": "UTF8"
					},
					{
						"name": "ProfAgencyOutSystem",
						"type": "UTF8"
					},
					{
						"name": "ProfAddrOutSystem",
						"type": "UTF8"
					},
					{
						"name": "ProfTelOutSystem",
						"type": "UTF8"
					},
					{
						"name": "Status",
						"type": "UTF8"
					},
					{
						"name": "CategoryType",
						"type": "UTF8"
					},
					{
						"name": "SubCategory",
						"type": "UTF8"
					},
					{
						"name": "SSConsent",
						"type": "UTF8"
					},
					{
						"name": "CheckConsent",
						"type": "UTF8"
					},
					{
						"name": "KeyAgencyID",
						"type": "INT32"
					},
					{
						"name": "SourceType",
						"type": "UTF8"
					},
					{
						"name": "OrigGroupRefID",
						"type": "INT32"
					},
					{
						"name": "SuggDate",
						"type": "INT96"
					},
					{
						"name": "ReasonCode",
						"type": "UTF8"
					},
					{
						"name": "CreationDate",
						"type": "INT96"
					},
					{
						"name": "EndReason",
						"type": "UTF8"
					},
					{
						"name": "RecordedByDept",
						"type": "UTF8"
					},
					{
						"name": "SysProfessional",
						"type": "UTF8"
					},
					{
						"name": "OutOfHours",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsIcscPreg')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"folderPath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "CPRegID",
						"type": "INT32"
					},
					{
						"name": "PersonID",
						"type": "INT32"
					},
					{
						"name": "StartDate",
						"type": "INT96"
					},
					{
						"name": "EndDate",
						"type": "INT96"
					},
					{
						"name": "AuditID",
						"type": "UTF8"
					},
					{
						"name": "AuditDate",
						"type": "INT96"
					},
					{
						"name": "RegComments",
						"type": "UTF8"
					},
					{
						"name": "DeRegReason",
						"type": "UTF8"
					},
					{
						"name": "IntegID",
						"type": "UTF8"
					},
					{
						"name": "SyncDate",
						"type": "INT96"
					},
					{
						"name": "RegNeglect",
						"type": "UTF8"
					},
					{
						"name": "RegPhysical",
						"type": "UTF8"
					},
					{
						"name": "RegSexual",
						"type": "UTF8"
					},
					{
						"name": "RegEmotional",
						"type": "UTF8"
					},
					{
						"name": "InitialMeetingID",
						"type": "INT32"
					},
					{
						"name": "FinalMeetingID",
						"type": "INT32"
					},
					{
						"name": "OLACSSR",
						"type": "UTF8"
					},
					{
						"name": "StaffHistoryID",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsIsPerson')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"folderPath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "PersonID",
						"type": "INT32"
					},
					{
						"name": "Surname",
						"type": "UTF8"
					},
					{
						"name": "Forename",
						"type": "UTF8"
					},
					{
						"name": "DOB",
						"type": "INT96"
					},
					{
						"name": "Gender",
						"type": "UTF8"
					},
					{
						"name": "ACType",
						"type": "UTF8"
					},
					{
						"name": "RSource",
						"type": "UTF8"
					},
					{
						"name": "AuditID",
						"type": "UTF8"
					},
					{
						"name": "AuditDate",
						"type": "INT96"
					},
					{
						"name": "Title",
						"type": "UTF8"
					},
					{
						"name": "HOReg",
						"type": "UTF8"
					},
					{
						"name": "ImmigStatus",
						"type": "UTF8"
					},
					{
						"name": "DUC",
						"type": "INT96"
					},
					{
						"name": "Nationality",
						"type": "UTF8"
					},
					{
						"name": "EthnicityComm",
						"type": "UTF8"
					},
					{
						"name": "Ethnicity",
						"type": "UTF8"
					},
					{
						"name": "ReligionP",
						"type": "UTF8"
					},
					{
						"name": "Religion",
						"type": "UTF8"
					},
					{
						"name": "ReligionDenomination",
						"type": "UTF8"
					},
					{
						"name": "ReligionNotes",
						"type": "UTF8"
					},
					{
						"name": "LangInterp",
						"type": "UTF8"
					},
					{
						"name": "Occupation",
						"type": "UTF8"
					},
					{
						"name": "CPRStart",
						"type": "INT96"
					},
					{
						"name": "CPREnd",
						"type": "INT96"
					},
					{
						"name": "DOBStr",
						"type": "UTF8"
					},
					{
						"name": "MatchValue",
						"type": "DOUBLE"
					},
					{
						"name": "DOD",
						"type": "INT96"
					},
					{
						"name": "Email",
						"type": "UTF8"
					},
					{
						"name": "PrefName",
						"type": "UTF8"
					},
					{
						"name": "MaritalStatus",
						"type": "UTF8"
					},
					{
						"name": "SexualOrientation",
						"type": "UTF8"
					},
					{
						"name": "LACStart",
						"type": "INT96"
					},
					{
						"name": "LACEnd",
						"type": "INT96"
					},
					{
						"name": "IntegID",
						"type": "UTF8"
					},
					{
						"name": "NHSNo",
						"type": "UTF8"
					},
					{
						"name": "SOneOffDate",
						"type": "INT96"
					},
					{
						"name": "SOneOffDetails",
						"type": "UTF8"
					},
					{
						"name": "ApproxAge",
						"type": "UTF8"
					},
					{
						"name": "RoutineImmune",
						"type": "UTF8"
					},
					{
						"name": "NoQualReason",
						"type": "UTF8"
					},
					{
						"name": "ReferralStart",
						"type": "INT96"
					},
					{
						"name": "ReferralEnd",
						"type": "INT96"
					},
					{
						"name": "CoreGroupMember",
						"type": "UTF8"
					},
					{
						"name": "UPN",
						"type": "UTF8"
					},
					{
						"name": "FormerUPN",
						"type": "UTF8"
					},
					{
						"name": "UnknownUPNReason",
						"type": "UTF8"
					},
					{
						"name": "CINCode",
						"type": "UTF8"
					},
					{
						"name": "CINCodeStart",
						"type": "INT96"
					},
					{
						"name": "CSSR",
						"type": "UTF8"
					},
					{
						"name": "CSSRCaseNo",
						"type": "UTF8"
					},
					{
						"name": "IsDisabled",
						"type": "UTF8"
					},
					{
						"name": "IsDisabledReg",
						"type": "UTF8"
					},
					{
						"name": "HazardCount",
						"type": "INT32"
					},
					{
						"name": "UnempReason",
						"type": "UTF8"
					},
					{
						"name": "LegalStatus",
						"type": "UTF8"
					},
					{
						"name": "LegalStatusDate",
						"type": "INT96"
					},
					{
						"name": "SyncDate",
						"type": "INT96"
					},
					{
						"name": "AliasInfo",
						"type": "UTF8"
					},
					{
						"name": "CPCategory",
						"type": "UTF8"
					},
					{
						"name": "FPlaceCount",
						"type": "INT32"
					},
					{
						"name": "ARCRef",
						"type": "UTF8"
					},
					{
						"name": "PortRef",
						"type": "UTF8"
					},
					{
						"name": "AllegationCount",
						"type": "INT32"
					},
					{
						"name": "RiskCount",
						"type": "INT32"
					},
					{
						"name": "PlaceOfBirth",
						"type": "UTF8"
					},
					{
						"name": "NINumber",
						"type": "UTF8"
					},
					{
						"name": "YOTNumber",
						"type": "UTF8"
					},
					{
						"name": "OtherId1",
						"type": "UTF8"
					},
					{
						"name": "OtherId2",
						"type": "UTF8"
					},
					{
						"name": "OtherId3",
						"type": "UTF8"
					},
					{
						"name": "OtherId4",
						"type": "UTF8"
					},
					{
						"name": "OtherId5",
						"type": "UTF8"
					},
					{
						"name": "OtherDate1",
						"type": "INT96"
					},
					{
						"name": "OtherDate2",
						"type": "INT96"
					},
					{
						"name": "OtherDate3",
						"type": "INT96"
					},
					{
						"name": "Secure",
						"type": "UTF8"
					},
					{
						"name": "SecureInfo",
						"type": "UTF8"
					},
					{
						"name": "SecureReviewDate",
						"type": "INT96"
					},
					{
						"name": "SecureUpdatedDate",
						"type": "INT96"
					},
					{
						"name": "SecureUpdatedBy",
						"type": "UTF8"
					},
					{
						"name": "HideAllAddresses",
						"type": "UTF8"
					},
					{
						"name": "IsDuplicate",
						"type": "UTF8"
					},
					{
						"name": "WhoMarkedAsDuplicate",
						"type": "UTF8"
					},
					{
						"name": "DuplicatedPersonID",
						"type": "INT32"
					},
					{
						"name": "MarkedAsDuplicateDate",
						"type": "INT96"
					},
					{
						"name": "IsAdopted",
						"type": "UTF8"
					},
					{
						"name": "AdoptedLinkedPersonID",
						"type": "INT32"
					},
					{
						"name": "WasUASC",
						"type": "UTF8"
					},
					{
						"name": "EDMIntegID",
						"type": "UTF8"
					},
					{
						"name": "IsHidden",
						"type": "UTF8"
					},
					{
						"name": "EDMSyncDate",
						"type": "INT96"
					},
					{
						"name": "EDMUpdate",
						"type": "UTF8"
					},
					{
						"name": "EDMTemporaryID",
						"type": "UTF8"
					},
					{
						"name": "ReasonSecure",
						"type": "UTF8"
					},
					{
						"name": "ProfilePhotoDocID",
						"type": "INT32"
					},
					{
						"name": "SecureManager",
						"type": "UTF8"
					},
					{
						"name": "InSearch",
						"type": "UTF8"
					},
					{
						"name": "RaaID",
						"type": "UTF8"
					},
					{
						"name": "DODEstimated",
						"type": "UTF8"
					},
					{
						"name": "HasFosterRecord",
						"type": "UTF8"
					},
					{
						"name": "UnbornDeceased",
						"type": "UTF8"
					},
					{
						"name": "UnbornDeceasedReason",
						"type": "UTF8"
					},
					{
						"name": "PreAdoptionSecure",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsLiquidLogic')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LiquidLogic",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceName": {
						"type": "string"
					},
					"ObjectName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@dataset().ObjectName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/LiquidLogic')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsLookUpsFull')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "CODE_DES",
						"type": "UTF8"
					},
					{
						"name": "EXT_CODE",
						"type": "UTF8"
					},
					{
						"name": "INACTIVE",
						"type": "UTF8"
					},
					{
						"name": "INT_CODE",
						"type": "UTF8"
					},
					{
						"name": "TABLE_ID",
						"type": "UTF8"
					},
					{
						"name": "UPDATED_BY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LAST_UPDT",
						"type": "INT96"
					},
					{
						"name": "RECORD_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LOCALE",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsMetricsTable')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "External control table to store sqlPullQueries Data and rawExecutions Data",
				"linkedServiceName": {
					"referenceName": "sqldb_gdp_contoso_uks_01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqldb_gdp_contoso_uks_01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsPeople')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "REFERENCE",
						"type": "UTF8"
					},
					{
						"name": "BUS_PHONE",
						"type": "UTF8"
					},
					{
						"name": "MOB_PHONE",
						"type": "UTF8"
					},
					{
						"name": "FAX_NUMBER",
						"type": "UTF8"
					},
					{
						"name": "EMAIL",
						"type": "UTF8"
					},
					{
						"name": "PERSON_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "DOB",
						"type": "INT96"
					},
					{
						"name": "E_ORIGIN",
						"type": "UTF8"
					},
					{
						"name": "FORENAME",
						"type": "UTF8"
					},
					{
						"name": "GENDER",
						"type": "UTF8"
					},
					{
						"name": "H_LANG",
						"type": "UTF8"
					},
					{
						"name": "MIDNAME",
						"type": "UTF8"
					},
					{
						"name": "SURNAME",
						"type": "UTF8"
					},
					{
						"name": "TITLE",
						"type": "UTF8"
					},
					{
						"name": "DISABILITY",
						"type": "UTF8"
					},
					{
						"name": "REG_DISABL",
						"type": "UTF8"
					},
					{
						"name": "GREEN_CARD",
						"type": "UTF8"
					},
					{
						"name": "KIN_NAME",
						"type": "UTF8"
					},
					{
						"name": "KIN_PHONE",
						"type": "UTF8"
					},
					{
						"name": "KNOWN_BY",
						"type": "UTF8"
					},
					{
						"name": "NI_NUMBER",
						"type": "UTF8"
					},
					{
						"name": "PERSONNEL_CONTROL",
						"type": "UTF8"
					},
					{
						"name": "EMPLOYEE",
						"type": "UTF8"
					},
					{
						"name": "NI_KEY",
						"type": "UTF8"
					},
					{
						"name": "NI_KEY_DESC",
						"type": "UTF8"
					},
					{
						"name": "NAME_KEY",
						"type": "UTF8"
					},
					{
						"name": "NAME_KEY_DESC",
						"type": "UTF8"
					},
					{
						"name": "LAST_UPDT",
						"type": "INT96"
					},
					{
						"name": "UPDATED_BY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "MEMO_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "POST_CODE",
						"type": "UTF8"
					},
					{
						"name": "ACTIVE",
						"type": "UTF8"
					},
					{
						"name": "INACRSN",
						"type": "UTF8"
					},
					{
						"name": "INACDATE",
						"type": "INT96"
					},
					{
						"name": "ASYLUM_SEEKER",
						"type": "UTF8"
					},
					{
						"name": "NOTES_MEMO_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "BLOB_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "UPDATE_CALENDAR_ONLINE",
						"type": "UTF8"
					},
					{
						"name": "U_TEST",
						"type": "UTF8"
					},
					{
						"name": "UTAKING_PGM_FOR_CTS",
						"type": "UTF8"
					},
					{
						"name": "UTAKING_PGM_FOR_HEAD",
						"type": "UTF8"
					},
					{
						"name": "ACHD_STD_FOR_HEAD",
						"type": "UTF8"
					},
					{
						"name": "LEGAL_SURNAME",
						"type": "UTF8"
					},
					{
						"name": "LEGAL_FORENAME",
						"type": "UTF8"
					},
					{
						"name": "UPPER_LEGAL_SURNAME",
						"type": "UTF8"
					},
					{
						"name": "UPPER_LEGAL_FORENAME",
						"type": "UTF8"
					},
					{
						"name": "CHANGEBYBASE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "U_EMPLOYE_STATUS",
						"type": "UTF8"
					},
					{
						"name": "U_UNEMPLYE_PERIOD",
						"type": "UTF8"
					},
					{
						"name": "U_PUBLIC_SECTOR",
						"type": "UTF8"
					},
					{
						"name": "U_PUBLIC",
						"type": "UTF8"
					},
					{
						"name": "U_REDUNDANCY",
						"type": "UTF8"
					},
					{
						"name": "U_LESS_249",
						"type": "UTF8"
					},
					{
						"name": "H_LANG2",
						"type": "UTF8"
					},
					{
						"name": "HOME_REL",
						"type": "UTF8"
					},
					{
						"name": "ASYLUM_STATUS",
						"type": "UTF8"
					},
					{
						"name": "UP_ID",
						"type": "UTF8"
					},
					{
						"name": "UPPER_SURNAME",
						"type": "UTF8"
					},
					{
						"name": "UPPER_FORENAME",
						"type": "UTF8"
					},
					{
						"name": "FORENAME_METAPHONE",
						"type": "UTF8"
					},
					{
						"name": "MIDNAME_METAPHONE",
						"type": "UTF8"
					},
					{
						"name": "SURNAME_METAPHONE",
						"type": "UTF8"
					},
					{
						"name": "L_SNAME_METAPHONE",
						"type": "UTF8"
					},
					{
						"name": "L_FNAME_METAPHONE",
						"type": "UTF8"
					},
					{
						"name": "IMPAIRMENTSTATUS",
						"type": "UTF8"
					},
					{
						"name": "DATE_DECEASED",
						"type": "INT96"
					},
					{
						"name": "DATE_NOTIFIED",
						"type": "INT96"
					},
					{
						"name": "DATE_CONFIRMED",
						"type": "INT96"
					},
					{
						"name": "ACL",
						"type": "UTF8"
					},
					{
						"name": "COORDINATOR_NAME",
						"type": "UTF8"
					},
					{
						"name": "HAS_HISTORICAL_EPISODE",
						"type": "UTF8"
					},
					{
						"name": "HAS_LIVE_EPISODE",
						"type": "UTF8"
					},
					{
						"name": "COORDINATOR_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SUFFIX",
						"type": "UTF8"
					},
					{
						"name": "GENDER_EXTRA",
						"type": "UTF8"
					},
					{
						"name": "NAME_KEY_STUD",
						"type": "UTF8"
					},
					{
						"name": "NAME_KEY_STUD_DESC",
						"type": "UTF8"
					},
					{
						"name": "NCY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "OS_NCY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "NON_NCY",
						"type": "UTF8"
					},
					{
						"name": "STAGE",
						"type": "UTF8"
					},
					{
						"name": "NCYSTAGE",
						"type": "UTF8"
					},
					{
						"name": "COUNTRY_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "ETHSOURCE",
						"type": "UTF8"
					},
					{
						"name": "ETHNIC_OR",
						"type": "UTF8"
					},
					{
						"name": "STUD_BASE_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LEA",
						"type": "UTF8"
					},
					{
						"name": "F_LEA",
						"type": "UTF8"
					},
					{
						"name": "R_LEA",
						"type": "UTF8"
					},
					{
						"name": "U_PAYROLL_NO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "U_SOCIAL_WORK",
						"type": "UTF8"
					},
					{
						"name": "U_SOCIAL_START",
						"type": "INT96"
					},
					{
						"name": "U_SOICAL_END",
						"type": "INT96"
					},
					{
						"name": "ULN",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "UPPER_MIDNAME",
						"type": "UTF8"
					},
					{
						"name": "U_REG_NUMBER",
						"type": "UTF8"
					},
					{
						"name": "U_CWDC",
						"type": "INT96"
					},
					{
						"name": "U_CG_REG",
						"type": "UTF8"
					},
					{
						"name": "U_CWDC_START",
						"type": "INT96"
					},
					{
						"name": "NATIONAL_IDENTITY",
						"type": "UTF8"
					},
					{
						"name": "STOP_NOTICE",
						"type": "UTF8"
					},
					{
						"name": "LEFT_ENGLAND",
						"type": "UTF8"
					},
					{
						"name": "ADULT_TRANSITION_DATE",
						"type": "INT96"
					},
					{
						"name": "CONSENT",
						"type": "UTF8"
					},
					{
						"name": "U_ADDR_CONF",
						"type": "UTF8"
					},
					{
						"name": "U_NASS",
						"type": "UTF8"
					},
					{
						"name": "U_U_PAYROLL_NUM",
						"type": "UTF8"
					},
					{
						"name": "U_U_DIRECTORATE",
						"type": "UTF8"
					},
					{
						"name": "U_DIRECTORATE",
						"type": "UTF8"
					},
					{
						"name": "U_SERVICE_AREA",
						"type": "UTF8"
					},
					{
						"name": "U_Contoso_DIRECTORATE",
						"type": "UTF8"
					},
					{
						"name": "U_Contoso_SERVICE_AREA",
						"type": "UTF8"
					},
					{
						"name": "U_Contoso_ORGANISATION",
						"type": "UTF8"
					},
					{
						"name": "U_GRADE",
						"type": "UTF8"
					},
					{
						"name": "CHANGEBYB2BS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "BIRTH_CERT_SEEN",
						"type": "UTF8"
					},
					{
						"name": "UCI",
						"type": "UTF8"
					},
					{
						"name": "TRAN_MEMO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "NASS_NUMBER",
						"type": "UTF8"
					},
					{
						"name": "ALERT_INFO",
						"type": "UTF8"
					},
					{
						"name": "ETAG",
						"type": "UTF8"
					},
					{
						"name": "BIRTH_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsPeopleNameChange')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "NAME_CHANGE_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "PERSON_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "CHANGE_DATE",
						"type": "INT96"
					},
					{
						"name": "LEGAL_SURNAME",
						"type": "UTF8"
					},
					{
						"name": "LEGAL_FORENAME",
						"type": "UTF8"
					},
					{
						"name": "SURNAME",
						"type": "UTF8"
					},
					{
						"name": "FORENAME",
						"type": "UTF8"
					},
					{
						"name": "MIDNAME",
						"type": "UTF8"
					},
					{
						"name": "TITLE",
						"type": "UTF8"
					},
					{
						"name": "CHANGEBYBASE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LAST_UPDT",
						"type": "INT96"
					},
					{
						"name": "UPDATED_BY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "L_SNAME_METAPHONE",
						"type": "UTF8"
					},
					{
						"name": "L_FNAME_METAPHONE",
						"type": "UTF8"
					},
					{
						"name": "SURNAME_METAPHONE",
						"type": "UTF8"
					},
					{
						"name": "FORENAME_METAPHONE",
						"type": "UTF8"
					},
					{
						"name": "MIDNAME_METAPHONE",
						"type": "UTF8"
					},
					{
						"name": "UPPER_LEGAL_SURNAME",
						"type": "UTF8"
					},
					{
						"name": "UPPER_LEGAL_FORENAME",
						"type": "UTF8"
					},
					{
						"name": "UPPER_SURNAME",
						"type": "UTF8"
					},
					{
						"name": "UPPER_FORENAME",
						"type": "UTF8"
					},
					{
						"name": "UPPER_MIDNAME",
						"type": "UTF8"
					},
					{
						"name": "CHANGEBYB2BS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsPpMark')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "MarkerID",
						"type": "INT32"
					},
					{
						"name": "MarkerKey",
						"type": "UTF8"
					},
					{
						"name": "MainRef",
						"type": "UTF8"
					},
					{
						"name": "PathRef",
						"type": "UTF8"
					},
					{
						"name": "UnitRef",
						"type": "UTF8"
					},
					{
						"name": "StatusCode",
						"type": "UTF8"
					},
					{
						"name": "SubStatus",
						"type": "UTF8"
					},
					{
						"name": "TaskID",
						"type": "INT32"
					},
					{
						"name": "ParentMarkerID",
						"type": "INT32"
					},
					{
						"name": "StartDate",
						"type": "INT96"
					},
					{
						"name": "EndDate",
						"type": "INT96"
					},
					{
						"name": "DueDate",
						"type": "INT96"
					},
					{
						"name": "StartedBy",
						"type": "UTF8"
					},
					{
						"name": "CompBy",
						"type": "UTF8"
					},
					{
						"name": "Reasons",
						"type": "UTF8"
					},
					{
						"name": "StartedByDept",
						"type": "UTF8"
					},
					{
						"name": "CompByDept",
						"type": "UTF8"
					},
					{
						"name": "DataEntryDate",
						"type": "INT96"
					},
					{
						"name": "DataEntryBy",
						"type": "UTF8"
					},
					{
						"name": "DataEntryByDept",
						"type": "UTF8"
					},
					{
						"name": "SubKey",
						"type": "UTF8"
					},
					{
						"name": "CancelReason",
						"type": "UTF8"
					},
					{
						"name": "RealParentMarkerID",
						"type": "INT32"
					},
					{
						"name": "ConsolidatedID",
						"type": "INT32"
					},
					{
						"name": "StartedStaffHistoryID",
						"type": "INT32"
					},
					{
						"name": "CompStaffHistoryID",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsRawParquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceName": {
						"type": "string"
					},
					"ObjectName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(toLower( substring( dataset().ObjectName, add(indexof(dataset().ObjectName, '.'),1), sub(length(dataset().ObjectName), add(indexof(dataset().ObjectName, '.'), 1)) ) ),'.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(\ndataset().SourceName, '/',\n\nsubstring(\ndataset().ObjectName,\nadd(indexof(dataset().ObjectName, '.'),1),\nsub(length(dataset().ObjectName), add(indexof(dataset().ObjectName, '.'), 1))\n), '/',\n'year=',\nformatDateTime(pipeline().TriggerTime,'yyyy'), '/',\n'month=',\nformatDateTime(pipeline().TriggerTime,'MM'), '/',\n'day=',\nformatDateTime(pipeline().TriggerTime,'dd'), '/'\n)",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "raw",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsRawSchools')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/Schools"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(\n\nsubstring(\ndataset().fileName,\n0,\nindexof(dataset().fileName, '_')\n\n),'.xlsx')\n",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(\n'schools/',\nsubstring(\ndataset().fileName,\n0,\nindexof(dataset().fileName, '_')\n\n), '/year=', \nformatDateTime(pipeline().TriggerTime,'yyyy'), '/month=',\nformatDateTime(pipeline().TriggerTime,'MM'), '/day=',\nformatDateTime(pipeline().TriggerTime,'dd')\n)",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsStudHist')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "LAST_UPDT",
						"type": "INT96"
					},
					{
						"name": "UPDATED_BY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "BASE_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "END_DATE",
						"type": "INT96"
					},
					{
						"name": "HIST_AMEND",
						"type": "INT96"
					},
					{
						"name": "HIST_TIME",
						"type": "UTF8"
					},
					{
						"name": "HIST_USER",
						"type": "UTF8"
					},
					{
						"name": "REG_BASE",
						"type": "UTF8"
					},
					{
						"name": "RESIDENCE",
						"type": "UTF8"
					},
					{
						"name": "RJOIN",
						"type": "UTF8"
					},
					{
						"name": "RLEAVE",
						"type": "UTF8"
					},
					{
						"name": "START_DATE",
						"type": "INT96"
					},
					{
						"name": "STUD_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "HIST_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "D_PER_WEEK",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "REG2_BASE",
						"type": "UTF8"
					},
					{
						"name": "REGTYPE",
						"type": "UTF8"
					},
					{
						"name": "BOARDER",
						"type": "UTF8"
					},
					{
						"name": "GUEST",
						"type": "UTF8"
					},
					{
						"name": "DESTINATION",
						"type": "UTF8"
					},
					{
						"name": "DESTINATION_LAST_UPDT",
						"type": "INT96"
					},
					{
						"name": "DESTINATION_UPDATED_BY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SITE_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SCHOOL_HISTORY_TYPE",
						"type": "UTF8"
					},
					{
						"name": "GROUNDS_REMOVAL",
						"type": "UTF8"
					},
					{
						"name": "CML_DESTINATION",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsStudentAttendance')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsWfAssessmentType')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "TemplateID",
						"type": "INT32"
					},
					{
						"name": "Description",
						"type": "UTF8"
					},
					{
						"name": "FormType",
						"type": "UTF8"
					},
					{
						"name": "Valid",
						"type": "UTF8"
					},
					{
						"name": "BranchDepts",
						"type": "UTF8"
					},
					{
						"name": "HardRevision",
						"type": "INT32"
					},
					{
						"name": "CustomerRevision",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "SoftRevision",
						"type": "INT32"
					},
					{
						"name": "Filename",
						"type": "UTF8"
					},
					{
						"name": "PlanEntity",
						"type": "UTF8"
					},
					{
						"name": "FormCreator",
						"type": "UTF8"
					},
					{
						"name": "DraftDate",
						"type": "INT96"
					},
					{
						"name": "ReleaseDate",
						"type": "INT96"
					},
					{
						"name": "RetireDate",
						"type": "INT96"
					},
					{
						"name": "AuditID",
						"type": "UTF8"
					},
					{
						"name": "AuditDate",
						"type": "INT96"
					},
					{
						"name": "SiteID",
						"type": "UTF8"
					},
					{
						"name": "Approver",
						"type": "UTF8"
					},
					{
						"name": "FolderID",
						"type": "INT32"
					},
					{
						"name": "TargetEndDateTrigger",
						"type": "UTF8"
					},
					{
						"name": "TargetEndDateDays",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "TargetEndInWorkingDays",
						"type": "UTF8"
					},
					{
						"name": "TargetStartDateTrigger",
						"type": "UTF8"
					},
					{
						"name": "TargetStartDateDays",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "TargetStartInWorkingDays",
						"type": "UTF8"
					},
					{
						"name": "RequestedDateTrigger",
						"type": "UTF8"
					},
					{
						"name": "RequestedDateDays",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "RequestedInWorkingDays",
						"type": "UTF8"
					},
					{
						"name": "RequiredDateTrigger",
						"type": "UTF8"
					},
					{
						"name": "RequiredDateDays",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "RequiredInWorkingDays",
						"type": "UTF8"
					},
					{
						"name": "AltFormType",
						"type": "UTF8"
					},
					{
						"name": "CFRFormTypeStream",
						"type": "UTF8"
					},
					{
						"name": "LastParseDate",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 0
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsWfaanswer')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "AnswerNo",
						"type": "INT32"
					},
					{
						"name": "FormSessionNo",
						"type": "INT32"
					},
					{
						"name": "QuestionID",
						"type": "UTF8"
					},
					{
						"name": "AnswerCode",
						"type": "UTF8"
					},
					{
						"name": "Secure",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsWfasession')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SessionNo",
						"type": "INT32"
					},
					{
						"name": "ProcessNo",
						"type": "INT32"
					},
					{
						"name": "FormNo",
						"type": "INT32"
					},
					{
						"name": "SessionDate",
						"type": "INT96"
					},
					{
						"name": "Timeframe",
						"type": "INT96"
					},
					{
						"name": "SessionCreator",
						"type": "UTF8"
					},
					{
						"name": "Status",
						"type": "UTF8"
					},
					{
						"name": "CompletionDate",
						"type": "INT96"
					},
					{
						"name": "CompletionNotes",
						"type": "UTF8"
					},
					{
						"name": "ParentSessionNo",
						"type": "INT32"
					},
					{
						"name": "ReassignedBy",
						"type": "UTF8"
					},
					{
						"name": "Role",
						"type": "UTF8"
					},
					{
						"name": "MarkerID",
						"type": "INT32"
					},
					{
						"name": "ModDate",
						"type": "INT96"
					},
					{
						"name": "RetractReason",
						"type": "UTF8"
					},
					{
						"name": "RejectReason",
						"type": "UTF8"
					},
					{
						"name": "StaffHistoryID",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsWfassessment')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"folderPath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "FormNo",
						"type": "INT32"
					},
					{
						"name": "ProcessNo",
						"type": "INT32"
					},
					{
						"name": "FormDate",
						"type": "INT96"
					},
					{
						"name": "FormCreator",
						"type": "UTF8"
					},
					{
						"name": "TemplateID",
						"type": "INT32"
					},
					{
						"name": "MarkerID",
						"type": "INT32"
					},
					{
						"name": "GroupedFormNo",
						"type": "INT32"
					},
					{
						"name": "FormType",
						"type": "UTF8"
					},
					{
						"name": "FormLink",
						"type": "UTF8"
					},
					{
						"name": "FormLinkKey",
						"type": "UTF8"
					},
					{
						"name": "Status",
						"type": "UTF8"
					},
					{
						"name": "Comments",
						"type": "UTF8"
					},
					{
						"name": "CompletionDate",
						"type": "INT96"
					},
					{
						"name": "CompletionNotes",
						"type": "UTF8"
					},
					{
						"name": "ParentFormNo",
						"type": "INT32"
					},
					{
						"name": "RepeatDate",
						"type": "INT96"
					},
					{
						"name": "ModDate",
						"type": "INT96"
					},
					{
						"name": "Secure",
						"type": "UTF8"
					},
					{
						"name": "SecureHidden",
						"type": "UTF8"
					},
					{
						"name": "WSpaceHidden",
						"type": "UTF8"
					},
					{
						"name": "ViewType",
						"type": "UTF8"
					},
					{
						"name": "APlanNo",
						"type": "INT32"
					},
					{
						"name": "Consent",
						"type": "UTF8"
					},
					{
						"name": "TaskCompleteDate",
						"type": "INT96"
					},
					{
						"name": "ScoresArchived",
						"type": "INT96"
					},
					{
						"name": "Source",
						"type": "UTF8"
					},
					{
						"name": "IntegID",
						"type": "UTF8"
					},
					{
						"name": "SyncDate",
						"type": "INT96"
					},
					{
						"name": "Approver",
						"type": "UTF8"
					},
					{
						"name": "ApprovalDate",
						"type": "INT96"
					},
					{
						"name": "RejectionComments",
						"type": "UTF8"
					},
					{
						"name": "CreationDate",
						"type": "INT96"
					},
					{
						"name": "StartDate",
						"type": "INT96"
					},
					{
						"name": "CreatorDept",
						"type": "UTF8"
					},
					{
						"name": "EDMIntegID",
						"type": "UTF8"
					},
					{
						"name": "ReqestedDate",
						"type": "INT96"
					},
					{
						"name": "RequiredByDate",
						"type": "INT96"
					},
					{
						"name": "TargetStartDate",
						"type": "INT96"
					},
					{
						"name": "TargetEndDate",
						"type": "INT96"
					},
					{
						"name": "ActualStartDate",
						"type": "INT96"
					},
					{
						"name": "ActualEndDate",
						"type": "INT96"
					},
					{
						"name": "Outcome",
						"type": "UTF8"
					},
					{
						"name": "DelayReason",
						"type": "UTF8"
					},
					{
						"name": "StartActionPlanning",
						"type": "UTF8"
					},
					{
						"name": "ProcessMode",
						"type": "INT32"
					},
					{
						"name": "CopiedFrom",
						"type": "UTF8"
					},
					{
						"name": "ReportPeriod",
						"type": "UTF8"
					},
					{
						"name": "EndReason",
						"type": "UTF8"
					},
					{
						"name": "RevisionNo",
						"type": "INT32"
					},
					{
						"name": "OriginalFormNo",
						"type": "INT32"
					},
					{
						"name": "IDENTIFIER_ICSREFER",
						"type": "UTF8"
					},
					{
						"name": "CANCELLATION_REASON",
						"type": "UTF8"
					},
					{
						"name": "CANCELLED",
						"type": "UTF8"
					},
					{
						"name": "ContextLink",
						"type": "UTF8"
					},
					{
						"name": "ContextLinkKey",
						"type": "UTF8"
					},
					{
						"name": "StaffHistoryID",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsWfassessmentArchive')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"folderPath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "ArchiveID",
						"type": "INT32"
					},
					{
						"name": "FormNo",
						"type": "INT32"
					},
					{
						"name": "ArchType",
						"type": "UTF8"
					},
					{
						"name": "FormData",
						"type": "UTF8"
					},
					{
						"name": "AuditID",
						"type": "UTF8"
					},
					{
						"name": "AuditDate",
						"type": "INT96"
					},
					{
						"name": "ControlID",
						"type": "UTF8"
					},
					{
						"name": "RenderInline",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dsWfpicklistitem')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dls_gdp_contoso_raw",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"folderPath": {
						"type": "string"
					}
				},
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderPath",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "pickid",
						"type": "UTF8"
					},
					{
						"name": "code",
						"type": "UTF8"
					},
					{
						"name": "description",
						"type": "UTF8"
					},
					{
						"name": "SecureCategory",
						"type": "UTF8"
					},
					{
						"name": "Extra1",
						"type": "UTF8"
					},
					{
						"name": "Extra2",
						"type": "UTF8"
					},
					{
						"name": "CodeMap",
						"type": "UTF8"
					},
					{
						"name": "DefCodeMap",
						"type": "UTF8"
					},
					{
						"name": "Expired",
						"type": "UTF8"
					},
					{
						"name": "NonExpirable",
						"type": "UTF8"
					},
					{
						"name": "ValidFrom",
						"type": "INT96"
					},
					{
						"name": "ValidTo",
						"type": "INT96"
					},
					{
						"name": "DeprecatedBy",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CapitaOne')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('CapitaOne_connectionString')]"
				},
				"connectVia": {
					"referenceName": "air-gdp-contoso-dev-01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LiquidLogic')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LiquidLogic_connectionString')]"
				},
				"connectVia": {
					"referenceName": "air-gdp-contoso-dev-01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/air-gdp-contoso-dev-01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dls_gdp_contoso_enriched')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('dls_gdp_contoso_enriched_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dls_gdp_contoso_raw')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('dls_gdp_contoso_raw_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/kv_gdp_contoso_01')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('kv_gdp_contoso_01_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sqldb_gdp_contoso_uks_01')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('sqldb_gdp_contoso_uks_01_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/st_gdp_contoso_01')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('st_gdp_contoso_01_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapse-gdp-contoso-uks-dev-001-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('synapse-gdp-contoso-uks-dev-001-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapse-gdp-contoso-uks-dev-001-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('synapse-gdp-contoso-uks-dev-001-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerAttendanceSummary')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeCapitaOneAttendanceSummary2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerAttendanceSummary_properties_pipeCapitaOneAttendanceSummary2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerAttendanceSummary_properties_pipeCapitaOneAttendanceSummary2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/capitaone/attendance_summary/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerAttendanceSummary_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeCapitaOneAttendanceSummary2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerCapitaOneSourcetoRaw')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeCapitaOne2Raw",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2021-02-28T04:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeCapitaOne2Raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerCitySchoolInformation2')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeSchoolsSchoolInformation2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerCitySchoolInformation2_properties_pipeSchoolsSchoolInformation2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerCitySchoolInformation2_properties_pipeSchoolsSchoolInformation2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/schools/CityMasterSchoolInformation/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerCitySchoolInformation2_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeSchoolsSchoolInformation2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerCpCarePlan')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeLiquidLogicCpCarePlan2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerCpCarePlan_properties_pipeLiquidLogicCpCarePlan2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerCpCarePlan_properties_pipeLiquidLogicCpCarePlan2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/liquidlogic/cpcareplan",
					"blobPathEndsWith": ".parquet",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerCpCarePlan_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeLiquidLogicCpCarePlan2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerEcafContact')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeLiquidLogicEcafContact2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerEcafContact_properties_pipeLiquidLogicEcafContact2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerEcafContact_properties_pipeLiquidLogicEcafContact2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/liquidlogic/ecafcontact",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerEcafContact_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeLiquidLogicEcafContact2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerEducationDetails')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeCapitaOneEducationDetails2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerEducationDetails_properties_pipeCapitaOneEducationDetails2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerEducationDetails_properties_pipeCapitaOneEducationDetails2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/capitaone/education_details/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerEducationDetails_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeCapitaOneEducationDetails2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerExclusions')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeCapitaOneExclusions2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerExclusions_properties_pipeCapitaOneExclusions2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerExclusions_properties_pipeCapitaOneExclusions2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/capitaone/exclusions/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerExclusions_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeCapitaOneExclusions2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerIcsContact2')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeLiquidLogicIcsContact22Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerIcsContact2_properties_pipeLiquidLogicIcsContact22Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerIcsContact2_properties_pipeLiquidLogicIcsContact22Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/liquidlogic/icscontact2/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerIcsContact2_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeLiquidLogicIcsContact22Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerIcsCprchist')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeLiquidLogicIcscCprchist2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerIcsCprchist_properties_pipeLiquidLogicIcscCprchist2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerIcsCprchist_properties_pipeLiquidLogicIcscCprchist2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/liquidlogic/icscprchist/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerIcsCprchist_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeLiquidLogicIcscCprchist2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerIcsLegalOrders')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeLiquidLogicIcsLegalOrders2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerIcsLegalOrders_properties_pipeLiquidLogicIcsLegalOrders2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerIcsLegalOrders_properties_pipeLiquidLogicIcsLegalOrders2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/liquidlogic/icslegalorders",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerIcsLegalOrders_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeLiquidLogicIcsLegalOrders2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerIcsPeriodCare')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeLiquidLogicIcsPeriodCare2Refined",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerIcsPeriodCare_properties_pipeLiquidLogicIcsPeriodCare2Refined_parameters_folderPath')]",
							"fileName": "[parameters('triggerIcsPeriodCare_properties_pipeLiquidLogicIcsPeriodCare2Refined_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/liquidlogic/icsperiodcare",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerIcsPeriodCare_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeLiquidLogicIcsPeriodCare2Refined')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerIcsPlacement')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeLiquidLogicIcsPlacement2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerIcsPlacement_properties_pipeLiquidLogicIcsPlacement2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerIcsPlacement_properties_pipeLiquidLogicIcsPlacement2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/liquidlogic/icsplacement/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerIcsPlacement_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeLiquidLogicIcsPlacement2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerIcsRefer')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeLiquidLogicIcsRefer2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerIcsRefer_properties_pipeLiquidLogicIcsRefer2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerIcsRefer_properties_pipeLiquidLogicIcsRefer2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/liquidlogic/icsrefer/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerIcsRefer_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeLiquidLogicIcsRefer2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerIcscPreg')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeLiquidLogicIcscPreg2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerIcscPreg_properties_pipeLiquidLogicIcscPreg2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerIcscPreg_properties_pipeLiquidLogicIcscPreg2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/liquidlogic/icscpreg",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerIcscPreg_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeLiquidLogicIcscPreg2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerInternalReferenceData2')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeSchoolsInternalReferenceData2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerInternalReferenceData2_properties_pipeSchoolsInternalReferenceData2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerInternalReferenceData2_properties_pipeSchoolsInternalReferenceData2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/schools/InternalReferenceData/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerInternalReferenceData2_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeSchoolsInternalReferenceData2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerIsPerson')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeLiquidLogicIsPerson2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerIsPerson_properties_pipeLiquidLogicIsPerson2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerIsPerson_properties_pipeLiquidLogicIsPerson2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/liquidlogic/isperson",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerIsPerson_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeLiquidLogicIsPerson2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerLiquidLogicSourcetoRaw')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeLiquidLogic2Raw",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2021-01-14T00:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeLiquidLogic2Raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerLookUpsFull')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeCapitaOneLookUpsFull2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerLookUpsFull_properties_pipeCapitaOneLookUpsFull2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerLookUpsFull_properties_pipeCapitaOneLookUpsFull2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/capitaone/lookups_full/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerLookUpsFull_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeCapitaOneLookUpsFull2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerPeople')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeCapitaOnePeople2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerPeople_properties_pipeCapitaOnePeople2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerPeople_properties_pipeCapitaOnePeople2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/capitaone/people/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerPeople_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeCapitaOnePeople2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerPeopleNameChange')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeCapitaOnePeopleNameChange2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerPeopleNameChange_properties_pipeCapitaOnePeopleNameChange2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerPeopleNameChange_properties_pipeCapitaOnePeopleNameChange2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/capitaone/people_name_change/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerPeopleNameChange_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeCapitaOnePeopleNameChange2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerPpMark')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeLiquidLogicPpMark2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerPpMark_properties_pipeLiquidLogicPpMark2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerPpMark_properties_pipeLiquidLogicPpMark2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/liquidlogic/ppmark/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerPpMark_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeLiquidLogicPpMark2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerSchoolFiles')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeSchools2Raw",
							"type": "PipelineReference"
						},
						"parameters": {
							"fileName": "[parameters('triggerSchoolFiles_properties_pipeSchools2Raw_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/schools/blobs/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerSchoolFiles_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeSchools2Raw')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerSchoolStatus')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeSchoolStatus2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerSchoolStatus_properties_pipeSchoolStatus2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerSchoolStatus_properties_pipeSchoolStatus2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/schools/SchoolStatus",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerSchoolStatus_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeSchoolStatus2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerStudHist')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeCapitaOneStudHist2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerStudHist_properties_pipeCapitaOneStudHist2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerStudHist_properties_pipeCapitaOneStudHist2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/capitaone/stud_hist/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerStudHist_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeCapitaOneStudHist2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerStudentAttendance')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeCapitaOneStudentAttendance2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerStudentAttendance_properties_pipeCapitaOneStudentAttendance2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerStudentAttendance_properties_pipeCapitaOneStudentAttendance2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/capitaone/student_attendance/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerStudentAttendance_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeCapitaOneStudentAttendance2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerTerms')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeTerms2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerTerms_properties_pipeTerms2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerTerms_properties_pipeTerms2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/schools/Terms",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerTerms_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeTerms2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerWfAssessment')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeLiquidLogicWfAssessment",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerWfAssessment_properties_pipeLiquidLogicWfAssessment_parameters_folderPath')]",
							"fileName": "[parameters('triggerWfAssessment_properties_pipeLiquidLogicWfAssessment_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/liquidlogic/wfassessment/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerWfAssessment_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeLiquidLogicWfAssessment')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerWfAssessmentArchive')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeLiquidLogicWfAssessmentArchive",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerWfAssessmentArchive_properties_pipeLiquidLogicWfAssessmentArchive_parameters_folderPath')]",
							"fileName": "[parameters('triggerWfAssessmentArchive_properties_pipeLiquidLogicWfAssessmentArchive_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/liquidlogic/wfassessmentarchive/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerWfAssessmentArchive_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeLiquidLogicWfAssessmentArchive')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerWfAssessmentType')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeLiquidLogicWfAssessmentType2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerWfAssessmentType_properties_pipeLiquidLogicWfAssessmentType2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerWfAssessmentType_properties_pipeLiquidLogicWfAssessmentType2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/liquidlogic/wfassessmenttype/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerWfAssessmentType_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeLiquidLogicWfAssessmentType2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerWfaanswer')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeLiquidLogicWfaanswer2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerWfaanswer_properties_pipeLiquidLogicWfaanswer2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerWfaanswer_properties_pipeLiquidLogicWfaanswer2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/liquidlogic/wfaanswer",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerWfaanswer_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeLiquidLogicWfaanswer2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerWfasession')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeLiquidLogicWfasession2Enriched",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerWfasession_properties_pipeLiquidLogicWfasession2Enriched_parameters_folderPath')]",
							"fileName": "[parameters('triggerWfasession_properties_pipeLiquidLogicWfasession2Enriched_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/liquidlogic/wfasession",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerWfasession_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeLiquidLogicWfasession2Enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/triggerWfpicklistitem')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeLiquidLogicWfpicklistitem",
							"type": "PipelineReference"
						},
						"parameters": {
							"folderPath": "[parameters('triggerWfpicklistitem_properties_pipeLiquidLogicWfpicklistitem_parameters_folderPath')]",
							"fileName": "[parameters('triggerWfpicklistitem_properties_pipeLiquidLogicWfpicklistitem_parameters_fileName')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/liquidlogic/wfpicklistitem",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('triggerWfpicklistitem_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/pipeLiquidLogicWfpicklistitem')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/air-gdp-contoso-dev-01')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowCapitaOneAttendanceSummary')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsAttendanceSummary",
								"type": "DatasetReference"
							},
							"name": "AttendanceSummary"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "Enriched"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tBASE_ID as decimal(38,18),\n\t\tCODE as string,\n\t\tMEANING as string,\n\t\tSTAT_MEANING as string,\n\t\tSCHOOL_MEANING as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('roundRobin', 4)) ~> AttendanceSummary\nAttendanceSummary sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'refined',\n\tfolderPath: 'capitaone/attendance_summary',\n\ttruncate:true,\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tkeys:['BASE_ID'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tBASE_ID\n\t)) ~> Enriched"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsAttendanceSummary')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowCapitaOneEducationDetails')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsEducationDetails",
								"type": "DatasetReference"
							},
							"name": "EducationDetails"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "Enriched"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tTRAN_EDATE as timestamp,\n\t\tLAST_UPDT as timestamp,\n\t\tUPDATED_BY as decimal(38,18),\n\t\tINACTDATE as timestamp,\n\t\tACTIVE as string,\n\t\tINACTRSN as string,\n\t\tADDRESSEE as string,\n\t\tAT_MEMO as decimal(38,18),\n\t\tEC_BASEID as decimal(38,18),\n\t\tES_ORD as string,\n\t\tFORM7_CAT as string,\n\t\tFSMEAL as string,\n\t\tFSM_END as timestamp,\n\t\tGB_RECS as decimal(38,18),\n\t\tINCARE as string,\n\t\tISREFCODE as string,\n\t\tLEA_ROUTE as string,\n\t\tLEA_TRAN as string,\n\t\tMON_SOC as string,\n\t\tPRIM_NEED as string,\n\t\tSEN as string,\n\t\tSENSTAGE as string,\n\t\tSERV_FAM as string,\n\t\tSTAT_ISSD as timestamp,\n\t\tSTAT_REPT as timestamp,\n\t\tSTAT_STOP as timestamp,\n\t\tSTUD_AMEND as timestamp,\n\t\tSTUD_ID as decimal(38,18),\n\t\tSTUD_TIME as string,\n\t\tSTUD_UPDT as string,\n\t\tSTUD_USER as string,\n\t\tTRAN_MEMO as decimal(38,18),\n\t\tTRAN_RECS as decimal(38,18),\n\t\tTRAV_FAM as string,\n\t\tLOCAL_UPI as string,\n\t\tASSESS_REC as string,\n\t\tACTIVE_SEN as string,\n\t\tACTIVE_TRN as string,\n\t\tCPD_BASE_ID as decimal(38,18),\n\t\tSTUD_ID_DESC as decimal(38,18),\n\t\tMOTHERTONGUE as string,\n\t\tMEDICAL as string,\n\t\tCONNEXIONS as string,\n\t\tNATIONALITY as string,\n\t\tPART_TIME as string,\n\t\tU_DATA_SHARING_CONSENT as string,\n\t\tEY_MEMO as decimal(38,18),\n\t\tU_CODE_RED as string,\n\t\tU_CODERED as string,\n\t\tU_CODES_RED as string,\n\t\tDEFERRED as string,\n\t\tU_U_KS5PLUS_GROUP as string,\n\t\tU_CIPC as string,\n\t\tU_CIE as string,\n\t\tAT_MEMO_EUPDATE as timestamp,\n\t\tGANDTINDICATOR as string,\n\t\tTRANSPORT_PROTECTED as string,\n\t\tTRANSPORT_PROTECTION_END as timestamp,\n\t\tCARER as string,\n\t\tPEP as string,\n\t\tTRAV_STATUS as string,\n\t\tTRAV_STATUS_DATA_SOURCE as string,\n\t\tTRAV_SITE_TYPE as string,\n\t\tTRAV_MOBILITY as string,\n\t\tDATE_FIRST_LOOKED_AFTER as timestamp,\n\t\tEOTAS as string,\n\t\tINCORRECT_DETAILS_ID as decimal(38,18),\n\t\tCHANGEBYB2BS as decimal(38,18),\n\t\tEY_2YEAR_FUNDING as string,\n\t\tEY_EFFECTIVE_DATE as timestamp,\n\t\tADOPTEDFROMCARE as string,\n\t\tPROTECTEDFSM as string,\n\t\tPROTECTEDFSMUNTIL as timestamp,\n\t\tAPP_CURRENT_BASE_ID as decimal(38,18),\n\t\tAPP_CURRENT_BASE_NAME as string,\n\t\tEOTAS_NIP as string,\n\t\tU_PARENTRESPONSIBLE as string,\n\t\tU_DBTEST1 as string,\n\t\tU_LASTPASS as timestamp,\n\t\tU_PEREXCL as string,\n\t\tU_PNEED as string,\n\t\tU_SENAREACODE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tSTUD_ID\n\t)) ~> EducationDetails\nEducationDetails alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'refined',\n\tfolderPath: 'capitaone/education_details',\n\tmergeSchema: true,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['STUD_ID','LAST_UPDT'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tSTUD_ID\n\t)) ~> Enriched"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsEducationDetails')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowCapitaOneExclusions')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExclusions",
								"type": "DatasetReference"
							},
							"name": "Exclusions"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "Enriched"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tLEA_DECISION as string,\n\t\tEXCL_ID as decimal(38,18),\n\t\tA_YEAR as string,\n\t\tTERM as string,\n\t\tBASE_ID as decimal(38,18),\n\t\tCATEGORY as string,\n\t\tREASON as string,\n\t\tSTART_DATE as timestamp,\n\t\tEXCL_DAYS as decimal(38,18),\n\t\tSTUD_ID as decimal(38,18),\n\t\tEND_DATE as timestamp,\n\t\tEXCL_MEMO as decimal(38,18),\n\t\tRESULT as string,\n\t\tNO_SUP_OFF as decimal(38,18),\n\t\tGOV_CON_DT as timestamp,\n\t\tOFF_ATTEND as decimal(38,18),\n\t\tUPHELD as string,\n\t\tAPPEAL_DT as timestamp,\n\t\tMEETING_DT as timestamp,\n\t\tUPDATED_BY as decimal(38,18),\n\t\tLAST_UPDT as timestamp,\n\t\tSCH_APPEAL_RECVD as string,\n\t\tAM_PM as string,\n\t\tREFERRED_DC as string,\n\t\tDC_MEETING_DT as timestamp,\n\t\tDC_DECISION as string,\n\t\tREINSTATE_DATE as timestamp,\n\t\tREINSTATE_REASON as string,\n\t\tDATE_OFF_ROLL as timestamp,\n\t\tPASTORAL_RECD as string,\n\t\tEND_MONITOR_DATE as timestamp,\n\t\tMOTIVATION as string,\n\t\tSTAGE_WHEN_EXCLUDED as string,\n\t\tSTATUS_WHEN_EXCLUDED as string,\n\t\tSITE_ID as decimal(38,18),\n\t\tEND_AM_PM as string,\n\t\tCREATED_DATE as timestamp,\n\t\tCREATED_BY as decimal(38,18),\n\t\tNCY_WHEN_EXCLUDED as decimal(38,18),\n\t\tSEN_STAGE_WHEN_EXCLUDED as string,\n\t\tSIXTH_DAY as timestamp,\n\t\tINCARE_WHEN_EXCLUDED as string,\n\t\tADDRESS_ID as decimal(38,18),\n\t\tFSM as string,\n\t\tREFERRED_APPEALS as string,\n\t\tACL as string,\n\t\tEXCL_LUNCH_LENGTH as decimal(38,18),\n\t\tCHANGEBYB2BS as decimal(38,18),\n\t\tSENEXPERT_REVIEW as string,\n\t\tEXC_DAYS_OS as decimal(38,18),\n\t\tVERIFIEDDATE as timestamp,\n\t\tVERIFIEDBY as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tSTUD_ID\n\t)) ~> Exclusions\nExclusions alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'refined',\n\tfolderPath: 'capitaone/exclusions',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['STUD_ID','LAST_UPDT'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tSTUD_ID\n\t)) ~> Enriched"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsExclusions')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowCapitaOneLookUpsFull')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsLookUpsFull",
								"type": "DatasetReference"
							},
							"name": "LookUpsFull"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "Enriched"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCODE_DES as string,\n\t\tEXT_CODE as string,\n\t\tINACTIVE as string,\n\t\tINT_CODE as string,\n\t\tTABLE_ID as string,\n\t\tUPDATED_BY as decimal(38,18),\n\t\tLAST_UPDT as timestamp,\n\t\tRECORD_ID as decimal(38,18),\n\t\tLOCALE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tTABLE_ID\n\t)) ~> LookUpsFull\nLookUpsFull sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'refined',\n\tfolderPath: 'capitaone/lookups_full',\n\ttruncate:true,\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tkeys:['TABLE_ID','CODE_DES','INT_CODE','EXT_CODE','RECORD_ID'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tTABLE_ID\n\t)) ~> Enriched"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsLookUpsFull')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowCapitaOnePeople')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsPeople",
								"type": "DatasetReference"
							},
							"name": "People"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "Enriched"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tREFERENCE as string,\n\t\tBUS_PHONE as string,\n\t\tMOB_PHONE as string,\n\t\tFAX_NUMBER as string,\n\t\tEMAIL as string,\n\t\tPERSON_ID as decimal(38,18),\n\t\tDOB as timestamp,\n\t\tE_ORIGIN as string,\n\t\tFORENAME as string,\n\t\tGENDER as string,\n\t\tH_LANG as string,\n\t\tMIDNAME as string,\n\t\tSURNAME as string,\n\t\tTITLE as string,\n\t\tDISABILITY as string,\n\t\tREG_DISABL as string,\n\t\tGREEN_CARD as string,\n\t\tKIN_NAME as string,\n\t\tKIN_PHONE as string,\n\t\tKNOWN_BY as string,\n\t\tNI_NUMBER as string,\n\t\tPERSONNEL_CONTROL as string,\n\t\tEMPLOYEE as string,\n\t\tNI_KEY as string,\n\t\tNI_KEY_DESC as string,\n\t\tNAME_KEY as string,\n\t\tNAME_KEY_DESC as string,\n\t\tLAST_UPDT as timestamp,\n\t\tUPDATED_BY as decimal(38,18),\n\t\tMEMO_ID as decimal(38,18),\n\t\tPOST_CODE as string,\n\t\tACTIVE as string,\n\t\tINACRSN as string,\n\t\tINACDATE as timestamp,\n\t\tASYLUM_SEEKER as string,\n\t\tNOTES_MEMO_ID as decimal(38,18),\n\t\tBLOB_ID as decimal(38,18),\n\t\tUPDATE_CALENDAR_ONLINE as string,\n\t\tU_TEST as string,\n\t\tUTAKING_PGM_FOR_CTS as string,\n\t\tUTAKING_PGM_FOR_HEAD as string,\n\t\tACHD_STD_FOR_HEAD as string,\n\t\tLEGAL_SURNAME as string,\n\t\tLEGAL_FORENAME as string,\n\t\tUPPER_LEGAL_SURNAME as string,\n\t\tUPPER_LEGAL_FORENAME as string,\n\t\tCHANGEBYBASE as decimal(38,18),\n\t\tU_EMPLOYE_STATUS as string,\n\t\tU_UNEMPLYE_PERIOD as string,\n\t\tU_PUBLIC_SECTOR as string,\n\t\tU_PUBLIC as string,\n\t\tU_REDUNDANCY as string,\n\t\tU_LESS_249 as string,\n\t\tH_LANG2 as string,\n\t\tHOME_REL as string,\n\t\tASYLUM_STATUS as string,\n\t\tUP_ID as string,\n\t\tUPPER_SURNAME as string,\n\t\tUPPER_FORENAME as string,\n\t\tFORENAME_METAPHONE as string,\n\t\tMIDNAME_METAPHONE as string,\n\t\tSURNAME_METAPHONE as string,\n\t\tL_SNAME_METAPHONE as string,\n\t\tL_FNAME_METAPHONE as string,\n\t\tIMPAIRMENTSTATUS as string,\n\t\tDATE_DECEASED as timestamp,\n\t\tDATE_NOTIFIED as timestamp,\n\t\tDATE_CONFIRMED as timestamp,\n\t\tACL as string,\n\t\tCOORDINATOR_NAME as string,\n\t\tHAS_HISTORICAL_EPISODE as string,\n\t\tHAS_LIVE_EPISODE as string,\n\t\tCOORDINATOR_ID as decimal(38,18),\n\t\tSUFFIX as string,\n\t\tGENDER_EXTRA as string,\n\t\tNAME_KEY_STUD as string,\n\t\tNAME_KEY_STUD_DESC as string,\n\t\tNCY as decimal(38,18),\n\t\tOS_NCY as decimal(38,18),\n\t\tNON_NCY as string,\n\t\tSTAGE as string,\n\t\tNCYSTAGE as string,\n\t\tCOUNTRY_ID as decimal(38,18),\n\t\tETHSOURCE as string,\n\t\tETHNIC_OR as string,\n\t\tSTUD_BASE_ID as decimal(38,18),\n\t\tLEA as string,\n\t\tF_LEA as string,\n\t\tR_LEA as string,\n\t\tU_PAYROLL_NO as decimal(38,18),\n\t\tU_SOCIAL_WORK as string,\n\t\tU_SOCIAL_START as timestamp,\n\t\tU_SOICAL_END as timestamp,\n\t\tULN as decimal(38,18),\n\t\tUPPER_MIDNAME as string,\n\t\tU_REG_NUMBER as string,\n\t\tU_CWDC as timestamp,\n\t\tU_CG_REG as string,\n\t\tU_CWDC_START as timestamp,\n\t\tNATIONAL_IDENTITY as string,\n\t\tSTOP_NOTICE as string,\n\t\tLEFT_ENGLAND as string,\n\t\tADULT_TRANSITION_DATE as timestamp,\n\t\tCONSENT as string,\n\t\tU_ADDR_CONF as string,\n\t\tU_NASS as string,\n\t\tU_U_PAYROLL_NUM as string,\n\t\tU_U_DIRECTORATE as string,\n\t\tU_DIRECTORATE as string,\n\t\tU_SERVICE_AREA as string,\n\t\tU_Contoso_DIRECTORATE as string,\n\t\tU_Contoso_SERVICE_AREA as string,\n\t\tU_Contoso_ORGANISATION as string,\n\t\tU_GRADE as string,\n\t\tCHANGEBYB2BS as decimal(38,18),\n\t\tBIRTH_CERT_SEEN as string,\n\t\tUCI as string,\n\t\tTRAN_MEMO as decimal(38,18),\n\t\tNASS_NUMBER as string,\n\t\tALERT_INFO as string,\n\t\tETAG as string,\n\t\tBIRTH_ID as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tPERSON_ID\n\t)) ~> People\nPeople alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'refined',\n\tfolderPath: 'capitaone/people',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['PERSON_ID','LAST_UPDT'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tPERSON_ID\n\t)) ~> Enriched"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsPeople')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowCapitaOnePeopleNameChange')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsPeopleNameChange",
								"type": "DatasetReference"
							},
							"name": "PeopleNameChange"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "Enriched"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tNAME_CHANGE_ID as decimal(38,18),\n\t\tPERSON_ID as decimal(38,18),\n\t\tCHANGE_DATE as timestamp,\n\t\tLEGAL_SURNAME as string,\n\t\tLEGAL_FORENAME as string,\n\t\tSURNAME as string,\n\t\tFORENAME as string,\n\t\tMIDNAME as string,\n\t\tTITLE as string,\n\t\tCHANGEBYBASE as decimal(38,18),\n\t\tLAST_UPDT as timestamp,\n\t\tUPDATED_BY as decimal(38,18),\n\t\tL_SNAME_METAPHONE as string,\n\t\tL_FNAME_METAPHONE as string,\n\t\tSURNAME_METAPHONE as string,\n\t\tFORENAME_METAPHONE as string,\n\t\tMIDNAME_METAPHONE as string,\n\t\tUPPER_LEGAL_SURNAME as string,\n\t\tUPPER_LEGAL_FORENAME as string,\n\t\tUPPER_SURNAME as string,\n\t\tUPPER_FORENAME as string,\n\t\tUPPER_MIDNAME as string,\n\t\tCHANGEBYB2BS as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tPERSON_ID\n\t)) ~> PeopleNameChange\nPeopleNameChange alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'refined',\n\tfolderPath: 'capitaone/people_name_change',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['PERSON_ID','NAME_CHANGE_ID','LAST_UPDT'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tPERSON_ID\n\t)) ~> Enriched"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsPeopleNameChange')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowCapitaOneStudHist')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsStudHist",
								"type": "DatasetReference"
							},
							"name": "StudHist"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "Enriched"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tLAST_UPDT as timestamp,\n\t\tUPDATED_BY as decimal(38,18),\n\t\tBASE_ID as decimal(38,18),\n\t\tEND_DATE as timestamp,\n\t\tHIST_AMEND as timestamp,\n\t\tHIST_TIME as string,\n\t\tHIST_USER as string,\n\t\tREG_BASE as string,\n\t\tRESIDENCE as string,\n\t\tRJOIN as string,\n\t\tRLEAVE as string,\n\t\tSTART_DATE as timestamp,\n\t\tSTUD_ID as decimal(38,18),\n\t\tHIST_ID as decimal(38,18),\n\t\tD_PER_WEEK as decimal(38,18),\n\t\tREG2_BASE as string,\n\t\tREGTYPE as string,\n\t\tBOARDER as string,\n\t\tGUEST as string,\n\t\tDESTINATION as string,\n\t\tDESTINATION_LAST_UPDT as timestamp,\n\t\tDESTINATION_UPDATED_BY as decimal(38,18),\n\t\tSITE_ID as decimal(38,18),\n\t\tSCHOOL_HISTORY_TYPE as string,\n\t\tGROUNDS_REMOVAL as string,\n\t\tCML_DESTINATION as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tHIST_ID\n\t)) ~> StudHist\nStudHist alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'refined',\n\tfolderPath: 'capitaone/stud_hist',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['HIST_ID','LAST_UPDT'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tHIST_ID\n\t)) ~> Enriched"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsStudHist')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowCapitaOneStudentAttendance')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/CapitaOne"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsStudentAttendance",
								"type": "DatasetReference"
							},
							"name": "StudentAttendance"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "Enriched"
						}
					],
					"transformations": [
						{
							"name": "GroupByToFilterDistinct"
						},
						{
							"name": "FilterOutCountAll"
						}
					],
					"script": "source(output(\n\t\tRECORD_ID as double,\n\t\tSTUD_ID as decimal(38,18),\n\t\tSTART_DATE as timestamp,\n\t\tATT_DATE as timestamp,\n\t\tGROUP_ID as double,\n\t\tMORNING_MARK as string,\n\t\tAFTERNOON_MARKS as string,\n\t\tUPDATED_BY as decimal(38,18),\n\t\tLAST_UPDT as timestamp,\n\t\tBASE_ID as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tSTUD_ID,\n\t\tBASE_ID\n\t)) ~> StudentAttendance\nStudentAttendance aggregate(groupBy(MORNING_MARK,\n\t\tRECORD_ID,\n\t\tSTUD_ID,\n\t\tSTART_DATE,\n\t\tATT_DATE,\n\t\tGROUP_ID,\n\t\tAFTERNOON_MARKS,\n\t\tUPDATED_BY,\n\t\tLAST_UPDT,\n\t\tBASE_ID),\n\tCountAll = count(1)) ~> GroupByToFilterDistinct\nGroupByToFilterDistinct select(mapColumn(\n\t\tMORNING_MARK,\n\t\tRECORD_ID,\n\t\tSTUD_ID,\n\t\tSTART_DATE,\n\t\tATT_DATE,\n\t\tGROUP_ID,\n\t\tAFTERNOON_MARKS,\n\t\tUPDATED_BY,\n\t\tLAST_UPDT,\n\t\tBASE_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> FilterOutCountAll\nFilterOutCountAll sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'refined',\n\tfolderPath: 'capitaone/student_attendance',\n\ttruncate:true,\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tkeys:['STUD_ID','BASE_ID'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tSTUD_ID,\n\t\tBASE_ID\n\t)) ~> Enriched"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsStudentAttendance')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowCpCarePlan')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsCpCarePlan",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tPlanNo as integer,\n\t\tParPlanNo as integer,\n\t\tPlanLink as string,\n\t\tPlanLinkKey as string,\n\t\tServiceArea as string,\n\t\tPlanType as string,\n\t\tMarkerID as integer,\n\t\tReferralID as integer,\n\t\tMarkerKey as string,\n\t\tStatus as string,\n\t\tGlobalPlanID as integer,\n\t\tGlobalRevision as integer,\n\t\tRevision as integer,\n\t\tSubRev as integer,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp,\n\t\tCPComments as string,\n\t\tCreatedBy as string,\n\t\tCreationDate as timestamp,\n\t\tEmergencyPlan as string,\n\t\tEContact1 as string,\n\t\tEContact1No as string,\n\t\tEContact2 as string,\n\t\tEContact2No as string,\n\t\tConsentGiven as string,\n\t\tPlanAgreed as string,\n\t\tSUserComments as string,\n\t\tPlanCoord as string,\n\t\tConsent as string,\n\t\tOfferedBy as string,\n\t\tOfferedDate as timestamp,\n\t\tOfferedNotes as string,\n\t\tRevisionDate as timestamp,\n\t\tUpdateDate as timestamp,\n\t\tCompletedBy as string,\n\t\tCompletionDate as timestamp,\n\t\tCompletionNotes as string,\n\t\tFrozenDate as timestamp,\n\t\tFreezeNotes as string,\n\t\tFrozenBy as string,\n\t\tLACStart as timestamp,\n\t\tLACEnd as timestamp,\n\t\tPartOneID as integer,\n\t\tPartTwoID as integer,\n\t\tReviewID as integer,\n\t\tPartTwoPlanNo as integer,\n\t\tAuditID as string,\n\t\tAuditDate as timestamp,\n\t\tAuthBy as string,\n\t\tAuthCode as string,\n\t\tReasonCeased as string,\n\t\tAuthDate as timestamp,\n\t\tAuthComm as string,\n\t\tOrderByOnDisplay as string,\n\t\tProvTaskNo as integer,\n\t\tEDMIntegID as string,\n\t\tReviewSummary as string,\n\t\tReviewNotes as string,\n\t\tAppVersion as integer,\n\t\tCreatedStaffHistoryID as integer,\n\t\tPlanCoordStaffHistoryID as integer,\n\t\tAuthStaffHistoryID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tPlanNo\n\t)) ~> source1\nsource1 alterRow(upsertIf(true()),\n\tpartitionBy('hash', 2,\n\t\tPlanNo\n\t)) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'refined',\n\tfolderPath: 'liquidlogic/cpcareplan',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['PlanNo','AuditDate'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tPlanNo\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsCpCarePlan')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowEcafContact')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsEcafContact",
								"type": "DatasetReference"
							},
							"name": "EcafContact"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tECAFContactID as integer,\n\t\tPersonID as integer,\n\t\tEpisodeID as integer,\n\t\tContactGroupID as integer,\n\t\tFormNo as integer,\n\t\tStartDate as timestamp,\n\t\tSuggDate as timestamp,\n\t\tCreationDate as timestamp,\n\t\tMarkerID as integer,\n\t\tRecordedBy as string,\n\t\tRecordedByDept as string,\n\t\tLinkedBy as string,\n\t\tLinkedDate as timestamp,\n\t\tParentsAware as string,\n\t\tChildAware as string,\n\t\tProfContact as string,\n\t\tPersonMakingContact as string,\n\t\tRelToChild as string,\n\t\tAnonymous as string,\n\t\tKeyAgencyID as integer,\n\t\tSysAgency as string,\n\t\tSysProfessional as string,\n\t\tProfNameOutSystem as string,\n\t\tProfPositionOutSystem as string,\n\t\tProfAgencyOutSystem as string,\n\t\tProfAddrOutSystem as string,\n\t\tProfTelOutSystem as string,\n\t\tFollowUp as string,\n\t\tContactType as string,\n\t\tContactMethod as string,\n\t\tSourceType as string,\n\t\tContactReason as string,\n\t\tContactReasonDesc as string,\n\t\tContactDetails as string,\n\t\tContactTopic as string,\n\t\tContactIssue as string,\n\t\tAuditID as string,\n\t\tAuditDate as timestamp,\n\t\tOutOfHours as string,\n\t\tEpisodeNeeds as string,\n\t\tPrimNeed as string,\n\t\tExternalFormNo as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tECAFContactID\n\t)) ~> EcafContact\nEcafContact alterRow(upsertIf(true()),\n\tpartitionBy('hash', 4,\n\t\tECAFContactID\n\t)) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'refined',\n\tfolderPath: 'liquidlogic/ecafcontact',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['ECAFContactID','AuditDate'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tECAFContactID\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsEcafContact')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowIcsContact2')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsIcsContact2",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tICSContactID as integer,\n\t\tPersonID as integer,\n\t\tReferralID as integer,\n\t\tStartDate as timestamp,\n\t\tContactDetails as string,\n\t\tFormNo as integer,\n\t\tRecordedBy as string,\n\t\tAuditID as string,\n\t\tAuditDate as timestamp,\n\t\tLinkedDate as timestamp,\n\t\tLinkedBy as string,\n\t\tMarkerID as integer,\n\t\tParentsAware as string,\n\t\tChildAware as string,\n\t\tSSConsent as string,\n\t\tCheckConsent as string,\n\t\tProfContact as string,\n\t\tPersonMakingContact as string,\n\t\tRelToChild as string,\n\t\tAnonymous as string,\n\t\tSysAgency as string,\n\t\tProfNameOutSystem as string,\n\t\tProfPositionOutSystem as string,\n\t\tProfAgencyOutSystem as string,\n\t\tProfAddrOutSystem as string,\n\t\tProfTelOutSystem as string,\n\t\tFollowUp as string,\n\t\tContactType as string,\n\t\tContactMethod as string,\n\t\tContactReason as string,\n\t\tContactReasonDesc as string,\n\t\tIntegID as string,\n\t\tSyncDate as timestamp,\n\t\tSourceType as string,\n\t\tContactTopic as string,\n\t\tContactIssue as string,\n\t\tKeyAgencyID as integer,\n\t\tSyncEvent as string,\n\t\tSuggDate as timestamp,\n\t\tCreationDate as timestamp,\n\t\tContactGroupID as integer,\n\t\tRecordedByDept as string,\n\t\tSysProfessional as string,\n\t\tOutOfHours as string,\n\t\tExternalFormNo as integer,\n\t\tRecordedStaffHistoryID as integer,\n\t\tLinkedStaffHistoryID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tICSContactID\n\t)) ~> source1\nsource1 alterRow(upsertIf(true()),\n\tpartitionBy('hash', 4,\n\t\tICSContactID\n\t)) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'refined',\n\tfolderPath: 'liquidlogic/icscontact2',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['ICSContactID','AuditDate'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tICSContactID\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsIcsContact2')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowIcsCprchist')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsIcsCprchist",
								"type": "DatasetReference"
							},
							"name": "IcsCprchist"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tCPRegCatID as integer,\n\t\tCPRegID as integer,\n\t\tPersonID as integer,\n\t\tMeetingID as integer,\n\t\tStartDate as timestamp,\n\t\tRegNeglect as string,\n\t\tRegPhysical as string,\n\t\tRegSexual as string,\n\t\tRegEmotional as string,\n\t\tRegComments as string,\n\t\tAuditID as string,\n\t\tAuditDate as timestamp,\n\t\tIntegID as string,\n\t\tEndDate as timestamp,\n\t\tSyncDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tCPRegCatID\n\t)) ~> IcsCprchist\nIcsCprchist sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'refined',\n\tfolderPath: 'liquidlogic/icscprchist',\n\ttruncate:true,\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tkeys:['CPRegCatID'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tCPRegCatID,\n\t\tCPRegID,\n\t\tPersonID,\n\t\tMeetingID,\n\t\tStartDate,\n\t\tRegNeglect,\n\t\tRegPhysical,\n\t\tRegSexual,\n\t\tRegEmotional,\n\t\tRegComments,\n\t\tAuditID,\n\t\tAuditDate,\n\t\tIntegID,\n\t\tEndDate,\n\t\tSyncDate\n\t),\n\tpartitionBy('hash', 4,\n\t\tCPRegCatID\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsIcsCprchist')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowIcsLegalOrders')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsIcsLegalOrders",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tOrderID as integer,\n\t\tStartDate as timestamp,\n\t\tCourt as string,\n\t\tPersonID as integer,\n\t\tAuditID as string,\n\t\tAuditDate as timestamp,\n\t\tLegalStatus as string,\n\t\tExpDate as timestamp,\n\t\tComments as string,\n\t\tEndDate as timestamp,\n\t\tPeriodID as integer,\n\t\tIntegID as string,\n\t\tSyncDate as timestamp,\n\t\tSyncFlag as string,\n\t\tLiveDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tPeriodID\n\t)) ~> source1\nsource1 alterRow(upsertIf(true()),\n\tpartitionBy('hash', 4,\n\t\tPeriodID\n\t)) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'refined',\n\tfolderPath: 'liquidlogic/icslegalorders',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['PeriodID','OrderID','PersonID','AuditDate'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tPeriodID\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsIcsLegalOrders')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowIcsPeriodCare')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsIcsPeriodCare",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tPeriodID as integer,\n\t\tPersonID as integer,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp,\n\t\tAuditID as string,\n\t\tAuditDate as timestamp,\n\t\tEndReason as string,\n\t\tCinCode as string,\n\t\tReasonCode as string,\n\t\tSyncFlag as string,\n\t\tACDetails as string,\n\t\tACDuration as string,\n\t\tNotes as string,\n\t\tACAccommodation as string,\n\t\tACAccommOther as string,\n\t\tIntegID as string,\n\t\tSyncDate as timestamp,\n\t\tLiveDate as timestamp,\n\t\tAdoptNumber as string,\n\t\tAdoptGender as string,\n\t\tAdoptLegalStatus as string,\n\t\tAdoptFromFoster as string,\n\t\tDateCancelled as timestamp,\n\t\tAdoptBestInterests as timestamp,\n\t\tAdoptAgree as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tPeriodID\n\t)) ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'refined',\n\tfolderPath: 'liquidlogic/icsperiodcare',\n\ttruncate:true,\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tkeys:['PeriodID','PersonID'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tPeriodID\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsIcsPeriodCare')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowIcsPlacement')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsIcsPlacement",
								"type": "DatasetReference"
							},
							"name": "IcsPlacement"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tPlacementID as integer,\n\t\tPersonID as integer,\n\t\tPlacementCode as string,\n\t\tPostCode as string,\n\t\tReason as string,\n\t\tAuditID as string,\n\t\tAuditDate as timestamp,\n\t\tAddrID as string,\n\t\tAddr as string,\n\t\tTelephone as string,\n\t\tPlacementLength as integer,\n\t\tMainCarerID as integer,\n\t\tHideInfo as string,\n\t\tHideName as string,\n\t\tHideAddress as string,\n\t\tHideRelChild as string,\n\t\tOutHoursName as string,\n\t\tOutHoursPhone as string,\n\t\tEndDate as timestamp,\n\t\tStartDate as timestamp,\n\t\tPlacementType as string,\n\t\tOtherType as string,\n\t\tVersion as integer,\n\t\tFromBla as string,\n\t\tEndPrevious as string,\n\t\tAddrHistoID as integer,\n\t\tPeriodID as integer,\n\t\tPDistance as string,\n\t\tRelationID as integer,\n\t\tRelationID2 as integer,\n\t\tRelationID3 as integer,\n\t\tIntegID as string,\n\t\tSyncDate as timestamp,\n\t\tSyncFlag as string,\n\t\tFosterID as integer,\n\t\tLiveDate as timestamp,\n\t\tDeptID as string,\n\t\tPlacementProvider as string,\n\t\tPlacementLocation as string,\n\t\tPlacementChangeReason as string,\n\t\tEmergencyCarerName as string,\n\t\tEmergencyAddress as string,\n\t\tEndReason as string,\n\t\tAdoptionMarkerID as integer,\n\t\tPre_LPG_AddressKey as string,\n\t\tOfstedPlacementType as string,\n\t\tDecisionAchieved as string,\n\t\tDecisionAchievedComments as string,\n\t\tFFAIsPlanDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tPlacementID\n\t)) ~> IcsPlacement\nIcsPlacement alterRow(upsertIf(true()),\n\tpartitionBy('hash', 4,\n\t\tPlacementID\n\t)) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'refined',\n\tfolderPath: 'liquidlogic/icsplacement',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['PlacementID','PersonID','AuditDate'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tPlacementID\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsIcsPlacement')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowIcsRefer')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsIcsRefer",
								"type": "DatasetReference"
							},
							"name": "IcsRefer"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tICSReferralID as integer,\n\t\tPersonID as integer,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp,\n\t\tInitialContactID as integer,\n\t\tReason as string,\n\t\tOrigFailed as string,\n\t\tReferralGroupID as integer,\n\t\tFormNo as integer,\n\t\tParentsAware as string,\n\t\tChildAware as string,\n\t\tAnonymous as string,\n\t\tRecordedBy as string,\n\t\tAuditID as string,\n\t\tAuditDate as timestamp,\n\t\tIntegID as string,\n\t\tSyncDate as timestamp,\n\t\tContactType as string,\n\t\tProfContact as string,\n\t\tPersonMakingContact as string,\n\t\tRelToChild as string,\n\t\tSysAgency as string,\n\t\tProfNameOutSystem as string,\n\t\tProfPositionOutSystem as string,\n\t\tProfAgencyOutSystem as string,\n\t\tProfAddrOutSystem as string,\n\t\tProfTelOutSystem as string,\n\t\tStatus as string,\n\t\tCategoryType as string,\n\t\tSubCategory as string,\n\t\tSSConsent as string,\n\t\tCheckConsent as string,\n\t\tKeyAgencyID as integer,\n\t\tSourceType as string,\n\t\tOrigGroupRefID as integer,\n\t\tSuggDate as timestamp,\n\t\tReasonCode as string,\n\t\tCreationDate as timestamp,\n\t\tEndReason as string,\n\t\tRecordedByDept as string,\n\t\tSysProfessional as string,\n\t\tOutOfHours as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tICSReferralID\n\t)) ~> IcsRefer\nIcsRefer alterRow(upsertIf(true()),\n\tpartitionBy('hash', 4,\n\t\tICSReferralID\n\t)) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'refined',\n\tfolderPath: 'liquidlogic/icsrefer',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['ICSReferralID','AuditDate'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tICSReferralID\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsIcsRefer')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowIcscPreg')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsIcscPreg",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tCPRegID as integer,\n\t\tPersonID as integer,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp,\n\t\tAuditID as string,\n\t\tAuditDate as timestamp,\n\t\tRegComments as string,\n\t\tDeRegReason as string,\n\t\tIntegID as string,\n\t\tSyncDate as timestamp,\n\t\tRegNeglect as string,\n\t\tRegPhysical as string,\n\t\tRegSexual as string,\n\t\tRegEmotional as string,\n\t\tInitialMeetingID as integer,\n\t\tFinalMeetingID as integer,\n\t\tOLACSSR as string,\n\t\tStaffHistoryID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tCPRegID\n\t)) ~> source1\nsource1 alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'refined',\n\tfolderPath: 'liquidlogic/icscpreg',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['CPRegID','AuditID','AuditDate'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsIcscPreg')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowIsPerson')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsIsPerson",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tPersonID as integer,\n\t\tSurname as string,\n\t\tForename as string,\n\t\tDOB as timestamp,\n\t\tGender as string,\n\t\tACType as string,\n\t\tRSource as string,\n\t\tAuditID as string,\n\t\tAuditDate as timestamp,\n\t\tTitle as string,\n\t\tHOReg as string,\n\t\tImmigStatus as string,\n\t\tDUC as timestamp,\n\t\tNationality as string,\n\t\tEthnicityComm as string,\n\t\tEthnicity as string,\n\t\tReligionP as string,\n\t\tReligion as string,\n\t\tReligionDenomination as string,\n\t\tReligionNotes as string,\n\t\tLangInterp as string,\n\t\tOccupation as string,\n\t\tCPRStart as timestamp,\n\t\tCPREnd as timestamp,\n\t\tDOBStr as string,\n\t\tMatchValue as double,\n\t\tDOD as timestamp,\n\t\tEmail as string,\n\t\tPrefName as string,\n\t\tMaritalStatus as string,\n\t\tSexualOrientation as string,\n\t\tLACStart as timestamp,\n\t\tLACEnd as timestamp,\n\t\tIntegID as string,\n\t\tNHSNo as string,\n\t\tSOneOffDate as timestamp,\n\t\tSOneOffDetails as string,\n\t\tApproxAge as string,\n\t\tRoutineImmune as string,\n\t\tNoQualReason as string,\n\t\tReferralStart as timestamp,\n\t\tReferralEnd as timestamp,\n\t\tCoreGroupMember as string,\n\t\tUPN as string,\n\t\tFormerUPN as string,\n\t\tUnknownUPNReason as string,\n\t\tCINCode as string,\n\t\tCINCodeStart as timestamp,\n\t\tCSSR as string,\n\t\tCSSRCaseNo as string,\n\t\tIsDisabled as string,\n\t\tIsDisabledReg as string,\n\t\tHazardCount as integer,\n\t\tUnempReason as string,\n\t\tLegalStatus as string,\n\t\tLegalStatusDate as timestamp,\n\t\tSyncDate as timestamp,\n\t\tAliasInfo as string,\n\t\tCPCategory as string,\n\t\tFPlaceCount as integer,\n\t\tARCRef as string,\n\t\tPortRef as string,\n\t\tAllegationCount as integer,\n\t\tRiskCount as integer,\n\t\tPlaceOfBirth as string,\n\t\tNINumber as string,\n\t\tYOTNumber as string,\n\t\tOtherId1 as string,\n\t\tOtherId2 as string,\n\t\tOtherId3 as string,\n\t\tOtherId4 as string,\n\t\tOtherId5 as string,\n\t\tOtherDate1 as timestamp,\n\t\tOtherDate2 as timestamp,\n\t\tOtherDate3 as timestamp,\n\t\tSecure as string,\n\t\tSecureInfo as string,\n\t\tSecureReviewDate as timestamp,\n\t\tSecureUpdatedDate as timestamp,\n\t\tSecureUpdatedBy as string,\n\t\tHideAllAddresses as string,\n\t\tIsDuplicate as string,\n\t\tWhoMarkedAsDuplicate as string,\n\t\tDuplicatedPersonID as integer,\n\t\tMarkedAsDuplicateDate as timestamp,\n\t\tIsAdopted as string,\n\t\tAdoptedLinkedPersonID as integer,\n\t\tWasUASC as string,\n\t\tEDMIntegID as string,\n\t\tIsHidden as string,\n\t\tEDMSyncDate as timestamp,\n\t\tEDMUpdate as string,\n\t\tEDMTemporaryID as string,\n\t\tReasonSecure as string,\n\t\tProfilePhotoDocID as integer,\n\t\tSecureManager as string,\n\t\tInSearch as string,\n\t\tRaaID as string,\n\t\tDODEstimated as string,\n\t\tHasFosterRecord as string,\n\t\tUnbornDeceased as string,\n\t\tUnbornDeceasedReason as string,\n\t\tPreAdoptionSecure as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tPersonID\n\t)) ~> source1\nsource1 alterRow(upsertIf(true()),\n\tpartitionBy('hash', 4,\n\t\tPersonID\n\t)) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'refined',\n\tfolderPath: 'liquidlogic/isperson',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['PersonID','AuditDate'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tPersonID\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsIsPerson')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowPpMark')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsPpMark",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tMarkerID as integer,\n\t\tMarkerKey as string,\n\t\tMainRef as string,\n\t\tPathRef as string,\n\t\tUnitRef as string,\n\t\tStatusCode as string,\n\t\tSubStatus as string,\n\t\tTaskID as integer,\n\t\tParentMarkerID as integer,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp,\n\t\tDueDate as timestamp,\n\t\tStartedBy as string,\n\t\tCompBy as string,\n\t\tReasons as string,\n\t\tStartedByDept as string,\n\t\tCompByDept as string,\n\t\tDataEntryDate as timestamp,\n\t\tDataEntryBy as string,\n\t\tDataEntryByDept as string,\n\t\tSubKey as string,\n\t\tCancelReason as string,\n\t\tRealParentMarkerID as integer,\n\t\tConsolidatedID as integer,\n\t\tStartedStaffHistoryID as integer,\n\t\tCompStaffHistoryID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 2,\n\t\tMarkerID\n\t)) ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'refined',\n\tfolderPath: 'liquidlogic/ppmark',\n\ttruncate:true,\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tkeys:['MarkerID','MarkerKey'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tMarkerID\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsPpMark')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowSchoolStatus')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/Schools"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_raw",
								"type": "LinkedServiceReference"
							},
							"name": "SchoolStatusData2"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "RefinedDeltaTable2"
						}
					],
					"transformations": [],
					"script": "parameters{\n\tfolderPath as string,\n\tfileName as string\n}\nsource(output(\n\t\tsch_status_code as short,\n\t\tsch_status as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'excel',\n\tfileSystem: 'raw',\n\tsheetName: 'master',\n\tfirstRowAsHeader: true,\n\twildcardPaths:[(concat($folderPath,'/',$fileName))]) ~> SchoolStatusData2\nSchoolStatusData2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'refined',\n\tfolderPath: 'schools/SchoolStatus',\n\ttruncate:true,\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RefinedDeltaTable2"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowSchoolsCityMasterSchoolInformation')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/Schools"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_raw",
								"type": "LinkedServiceReference"
							},
							"name": "CityMasterSchoolInformation"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "RefinedTestDeltaTable"
						}
					],
					"transformations": [],
					"script": "parameters{\n\tfolderPath as string,\n\tfileName as string\n}\nsource(output(\n\t\tsch_base_id as integer,\n\t\tsch_urn_no as integer,\n\t\tsch_dfe_no as integer,\n\t\tsch_name as string,\n\t\tsch_type as string,\n\t\tAllocation as string,\n\t\tsch_age_range as string,\n\t\tsch_roll as short,\n\t\tsch_roll_date as date 'dd-MMM-yyyy',\n\t\tsch_add_one as string,\n\t\tsch_add_two as string,\n\t\tsch_add_three as string,\n\t\tsch_sponsor as string,\n\t\tsch_sponsor_date as date 'dd-MM-yyyy'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\trowUrlColumn: 'SourceName',\n\tformat: 'excel',\n\tfileSystem: 'raw',\n\tsheetName: 'master',\n\tfirstRowAsHeader: true,\n\twildcardPaths:[(concat($folderPath,'/',$fileName))],\n\tpartitionBy('hash', 4,\n\t\tsch_base_id\n\t)) ~> CityMasterSchoolInformation\nCityMasterSchoolInformation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'refined',\n\tfolderPath: 'schools/CityMasterSchoolInformation',\n\ttruncate:true,\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tkeys:['sch_base_id'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tsch_base_id\n\t)) ~> RefinedTestDeltaTable"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowSchoolsInternalReferenceData')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/Schools"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_raw",
								"type": "LinkedServiceReference"
							},
							"name": "InternalReferenceData2"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "RefinedTestDeltaTable2"
						}
					],
					"transformations": [],
					"script": "parameters{\n\tfolderPath as string,\n\tfileName as string\n}\nsource(output(\n\t\tENRICH_SOURCE as string,\n\t\tDOMAIN as string,\n\t\tDESCRIPTION as string,\n\t\tGROUP as string,\n\t\tSUB_GROUP as string,\n\t\tINTERNAL_CODE as string,\n\t\tEXTERNAL_CODE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'excel',\n\tfileSystem: 'raw',\n\tsheetName: 'Sheet1',\n\tfirstRowAsHeader: true,\n\twildcardPaths:[(concat($folderPath,'/',$fileName))]) ~> InternalReferenceData2\nInternalReferenceData2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'refined',\n\tfolderPath: 'schools/InternalReferenceData',\n\ttruncate:true,\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RefinedTestDeltaTable2"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowTerms')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/Schools"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_raw",
								"type": "LinkedServiceReference"
							},
							"name": "TermsData2"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "parameters{\n\tfolderPath as string,\n\tfileName as string\n}\nsource(output(\n\t\tsch_dfe_no as integer,\n\t\tsch_hol_date_start as date,\n\t\tsch_hol_date_end as date,\n\t\tsch_hol_event as string,\n\t\tsch_status_code as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'excel',\n\tfileSystem: 'raw',\n\tsheetName: 'master',\n\tfirstRowAsHeader: true,\n\twildcardPaths:[(concat($folderPath,'/',$fileName))]) ~> TermsData2\nTermsData2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'refined',\n\tfolderPath: 'schools/Terms',\n\ttruncate:true,\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_raw')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowWfAssessment')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsWfassessment",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tFormNo as integer,\n\t\tProcessNo as integer,\n\t\tFormDate as timestamp,\n\t\tFormCreator as string,\n\t\tTemplateID as integer,\n\t\tMarkerID as integer,\n\t\tGroupedFormNo as integer,\n\t\tFormType as string,\n\t\tFormLink as string,\n\t\tFormLinkKey as string,\n\t\tStatus as string,\n\t\tComments as string,\n\t\tCompletionDate as timestamp,\n\t\tCompletionNotes as string,\n\t\tParentFormNo as integer,\n\t\tRepeatDate as timestamp,\n\t\tModDate as timestamp,\n\t\tSecure as string,\n\t\tSecureHidden as string,\n\t\tWSpaceHidden as string,\n\t\tViewType as string,\n\t\tAPlanNo as integer,\n\t\tConsent as string,\n\t\tTaskCompleteDate as timestamp,\n\t\tScoresArchived as timestamp,\n\t\tSource as string,\n\t\tIntegID as string,\n\t\tSyncDate as timestamp,\n\t\tApprover as string,\n\t\tApprovalDate as timestamp,\n\t\tRejectionComments as string,\n\t\tCreationDate as timestamp,\n\t\tStartDate as timestamp,\n\t\tCreatorDept as string,\n\t\tEDMIntegID as string,\n\t\tReqestedDate as timestamp,\n\t\tRequiredByDate as timestamp,\n\t\tTargetStartDate as timestamp,\n\t\tTargetEndDate as timestamp,\n\t\tActualStartDate as timestamp,\n\t\tActualEndDate as timestamp,\n\t\tOutcome as string,\n\t\tDelayReason as string,\n\t\tStartActionPlanning as string,\n\t\tProcessMode as integer,\n\t\tCopiedFrom as string,\n\t\tReportPeriod as string,\n\t\tEndReason as string,\n\t\tRevisionNo as integer,\n\t\tOriginalFormNo as integer,\n\t\tIDENTIFIER_ICSREFER as string,\n\t\tCANCELLATION_REASON as string,\n\t\tCANCELLED as string,\n\t\tContextLink as string,\n\t\tContextLinkKey as string,\n\t\tStaffHistoryID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tFormNo\n\t)) ~> source1\nsource1 alterRow(upsertIf(true()),\n\tpartitionBy('hash', 4,\n\t\tFormNo\n\t)) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'refined',\n\tfolderPath: 'liquidlogic/wfassessment',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['FormNo','ProcessNo','TemplateID','MarkerID','ModDate'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tFormNo\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsWfassessment')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowWfAssessmentArchive')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsWfassessmentArchive",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tArchiveID as integer,\n\t\tFormNo as integer,\n\t\tArchType as string,\n\t\tFormData as string,\n\t\tAuditID as string,\n\t\tAuditDate as timestamp,\n\t\tControlID as string,\n\t\tRenderInline as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tFormNo\n\t)) ~> source1\nsource1 alterRow(upsertIf(true()),\n\tpartitionBy('hash', 4,\n\t\tFormNo\n\t)) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'refined',\n\tfolderPath: 'liquidlogic/wfassessmentarchive',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['ArchiveID','FormNo','FormData','AuditDate'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tArchiveID\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsWfassessmentArchive')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowWfAssessmentType')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsWfAssessmentType",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tTemplateID as integer,\n\t\tDescription as string,\n\t\tFormType as string,\n\t\tValid as string,\n\t\tBranchDepts as string,\n\t\tHardRevision as integer,\n\t\tCustomerRevision as decimal(19,0),\n\t\tSoftRevision as integer,\n\t\tFilename as string,\n\t\tPlanEntity as string,\n\t\tFormCreator as string,\n\t\tDraftDate as timestamp,\n\t\tReleaseDate as timestamp,\n\t\tRetireDate as timestamp,\n\t\tAuditID as string,\n\t\tAuditDate as timestamp,\n\t\tSiteID as string,\n\t\tApprover as string,\n\t\tFolderID as integer,\n\t\tTargetEndDateTrigger as string,\n\t\tTargetEndDateDays as decimal(19,0),\n\t\tTargetEndInWorkingDays as string,\n\t\tTargetStartDateTrigger as string,\n\t\tTargetStartDateDays as decimal(19,0),\n\t\tTargetStartInWorkingDays as string,\n\t\tRequestedDateTrigger as string,\n\t\tRequestedDateDays as decimal(19,0),\n\t\tRequestedInWorkingDays as string,\n\t\tRequiredDateTrigger as string,\n\t\tRequiredDateDays as decimal(19,0),\n\t\tRequiredInWorkingDays as string,\n\t\tAltFormType as string,\n\t\tCFRFormTypeStream as string,\n\t\tLastParseDate as decimal(19,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tTemplateID\n\t)) ~> source1\nsource1 alterRow(upsertIf(true()),\n\tpartitionBy('hash', 4,\n\t\tTemplateID\n\t)) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'refined',\n\tfolderPath: 'liquidlogic/wfassessmenttype',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['TemplateID','AuditDate'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tTemplateID\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsWfAssessmentType')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowWfaanswer')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsWfaanswer",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tAnswerNo as integer,\n\t\tFormSessionNo as integer,\n\t\tQuestionID as string,\n\t\tAnswerCode as string,\n\t\tSecure as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tAnswerNo\n\t)) ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'refined',\n\tfolderPath: 'liquidlogic/wfaanswer',\n\ttruncate:true,\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tkeys:['AnswerNo'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tAnswerNo\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsWfaanswer')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowWfasession')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsWfasession",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tSessionNo as integer,\n\t\tProcessNo as integer,\n\t\tFormNo as integer,\n\t\tSessionDate as timestamp,\n\t\tTimeframe as timestamp,\n\t\tSessionCreator as string,\n\t\tStatus as string,\n\t\tCompletionDate as timestamp,\n\t\tCompletionNotes as string,\n\t\tParentSessionNo as integer,\n\t\tReassignedBy as string,\n\t\tRole as string,\n\t\tMarkerID as integer,\n\t\tModDate as timestamp,\n\t\tRetractReason as string,\n\t\tRejectReason as string,\n\t\tStaffHistoryID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tSessionNo\n\t)) ~> source1\nsource1 alterRow(upsertIf(true()),\n\tpartitionBy('hash', 4,\n\t\tSessionNo\n\t)) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'refined',\n\tfolderPath: 'liquidlogic/wfasession',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['SessionNo','ModDate'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tSessionNo,\n\t\tProcessNo,\n\t\tFormNo,\n\t\tSessionDate,\n\t\tTimeframe,\n\t\tSessionCreator,\n\t\tStatus,\n\t\tCompletionDate,\n\t\tCompletionNotes,\n\t\tParentSessionNo,\n\t\tReassignedBy,\n\t\tRole,\n\t\tMarkerID,\n\t\tModDate,\n\t\tRetractReason,\n\t\tRejectReason,\n\t\tStaffHistoryID\n\t),\n\tpartitionBy('hash', 4,\n\t\tSessionNo\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsWfasession')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/flowWfpicklistitem')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GDP/LiquidLogic"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsWfpicklistitem",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "dls_gdp_contoso_enriched",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tpickid as string,\n\t\tcode as string,\n\t\tdescription as string,\n\t\tSecureCategory as string,\n\t\tExtra1 as string,\n\t\tExtra2 as string,\n\t\tCodeMap as string,\n\t\tDefCodeMap as string,\n\t\tExpired as string,\n\t\tNonExpirable as string,\n\t\tValidFrom as timestamp,\n\t\tValidTo as timestamp,\n\t\tDeprecatedBy as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tpartitionBy('hash', 4,\n\t\tpickid\n\t)) ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'refined',\n\tfolderPath: 'liquidlogic/wfpicklistitem',\n\ttruncate:true,\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tkeys:['pickid','code','description'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 4,\n\t\tpickid\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dsWfpicklistitem')]",
				"[concat(variables('workspaceId'), '/linkedServices/dls_gdp_contoso_enriched')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}